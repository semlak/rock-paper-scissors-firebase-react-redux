{"version":3,"sources":["actions/types.js","gameStatuses.js","reducers/index.js","reducers/authReducer.js","reducers/gatheringReducer.js","reducers/gameReducer.js","reducers/modalsReducer.js","config/firebase.js","firebase.js","gathering.js","actions/game.js","actions/gatheringActions.js","components/Game.js","actions/user.js","actions/modalActions.js","components/Navbar.js","components/requireAuth.js","components/SignIn.js","components/PlayerList.js","components/AuthenticationModal.js","components/LoginForm.js","components/RegistrationForm.js","components/Landing.js","pages/Main.js","App.js","index.js","rpsLogo.png","img/user.png","img/landing-rps.jpg"],"names":["userActions","gatheringActions","gameActions","GAME_REQUESTED","GAME_CREATED","GAME_STARTED","GAME_ENDED","MAKE_PLAY","PLAY_IN_PROGRESS","PLAY_RECEIVED","ROUND_OUTCOME","GAME_UPDATE","GAME_IN_PROGRESS","modalActions","gameStatus","NO_GAME","WAITING_FOR_BOTH_PLAYERS","PLAY_MADE_WAITING_FOR_OPPONENT","OPPONENT_PLAY_WAITING_FOR_USER","DETERMINING_ROUND_WINNER","combineReducers","auth","state","arguments","length","undefined","action","type","payload","gathering","Object","objectSpread","onlinePlayers","game","gameStatuses","keys","indexOf","console","log","gameKey","gameData","myUid","opponentUid","player2","actionPayload","newGameStatus","playerPlay","playerAction","getGameStateAfterPlayMade","_state$gameData","player1Uid","player1","player2Uid","round","gameInProgress","player1or2","player","playerUid","key","concat","playerActions","defineProperty","player1Actions","player2Actions","getGameStateAfterPlayReceived","_action$payload","player1Wins","player2Wins","maxNumberOfGames","newRound","Math","abs","modals","authenticationModalOpen","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","refs","googleProvider","GoogleAuthProvider","GithubAuthProvider","Gathering","randomName","random","toString","replace","substr","databaseReference","roomName","this","db","room","ref","encodeURIComponent","myName","user","updateStatus","uid","data","presenceRef","self","on","snap","val","onDisconnect","remove","set","join","displayName","_this","Promise","resolve","reject","child","push","leave","over","onUpdated","callback","numChildren","error","GamesRef","database","GamesRefChild","childRef","createPlayerActionListener","gameRef","dispatch","refString","snapshot","plays","map","newGameListenerEvent","snapshotKey","snapshotVal","gameClosed","opponent","once","createRoundUpdateListener","gameData1","gameUID","createEndGameListener","changePlayerStatus","Game","play","e","target","value","_this$props$game$game","props","player1UID","player2UID","myUID","match","makePlay","endCurrentGame","endGame","render","_this$getStat","getStat","opponentName","myWins","opponentWins","ties","winner","_this$props$game$game2","playEnabled","loadingMessage","activeCardBody","react_default","a","createElement","reactstrap_es","className","color","onClick","disabled","id","style","display","_this$props","players","find","inGame","prevProps","_this$props$game","getRoundOutcome","_this$props$game$game3","player1Name","player2Name","name","wins","_ref","Component","connect","_ref3","then","catch","GameKey","gameValRef","err","Error","minNumberOfWins","ceil","values","player1Action","i","player2Action","reduce","acc","outcome","update","updateWithRoundOutcome","signIn","signInWithPopup","result","toggleAuthenticationModal","AppNavbar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","isOpen","setState","signOutAction","signOut","toggleModal","userSignOut","userMenu","nav","inNavbar","caret","photoURL","react_avatar_es","src","alt","size","Avatar","getRandomColor","right","divider","outline","light","expand","dark","href","rpsLogo","height","navbar","React","defaultProps","leaveGathering","authRef","currentUser","requireAuth","ComposedComponent","Authentication","_Component","apply","inherits","createClass","context","router","history","nextProps","contextTypes","PropTypes","object","Signin","preventDefault","defaultUserImage","PlayerAvatar","textSizeRatio","UserList","updatePlayerStatusIfNeccessary","selectPlayer","Array","isArray","title","PlayerList_PlayerAvatar","_ref2","AuthenticationModal","toggleTab","activeTab","tab","_this2","googleSignIn","tabs","tabId","LoginForm","closeButtonAction","RegistrationForm","handleInputChange","event","handleLoginClick","_this$state","email","password","loginUserWithEmailPassword","_this$state2","_this$props$modals","modalError","loginError","message","valid","invalid","row","for","sm","placeholder","onChange","offset","data-dismiss","signInWithEmailAndPassword","setTimeout","validateEmail","handleRegisterClick","username","passwordConfirm","registerUserAction","registrationError","autoComplete","createUserWithEmailAndPassword","authUser","updateProfile","Landing","landingImage","Main","requestGame","joinGathering","_this$props2","appStatus","appHeaderText","components_Game","PlayerList","count","otherPlayer","newGame","UnconnectedApp","_getPrototypeOf2","_len","args","_key","componentDidMount","fetchUser","process","BrowserRouter","basename","Navbar","components_AuthenticationModal","Route","exact","path","component","onAuthStateChanged","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4fdb5b13.chunk.js","sourcesContent":["export const userActions = {\n  FETCH_USER: 'FETCH_USER',\n  SIGNIN_REQUEST: 'SIGNIN_REQUEST',\n  SIGNIN_SUCCESSFUL: 'SIGNIN_SUCCESSFUL',\n  SIGNIN_ERROR: 'SIGNIN_ERROR',\n  SIGNOUT_SUCCESSFUL: 'SIGNOUT_SUCCESSFUL',\n  SIGNOUT_REQUEST: 'SIGNOUT_REQUEST',\n  SIGNOUT_ERROR: 'SIGNOUT_ERROR',\n  REGISTER_USER: 'REGISTER_USER',\n  LOGIN_USER: 'LOGIN_USER',\n  EMAIL_PASSWORD_LOGIN_ATTEMPT: 'EMAIL_PASSWORD_LOGIN_ATTEMPT',\n  EMAIL_PASSWORD_LOGIN_SUCCESS: 'EMAIL_PASSWORD_LOGIN_SUCCESS',\n  EMAIL_PASSWORD_LOGIN_FAIL: 'EMAIL_PASSWORD_LOGIN_FAIL',\n  EMAIL_PASSWORD_REGISTRATION_ATTEMPT: 'EMAIL_PASSWORD_REGISTRATION_ATTEMPT',\n  EMAIL_PASSWORD_REGISTRATION_SUCCESS: 'EMAIL_PASSWORD_REGISTRATION_SUCCESS',\n  EMAIL_PASSWORD_REGISTRATION_FAIL: 'EMAIL_PASSWORD_REGISTRATION_FAIL',\n};\n\nexport const gatheringActions = {\n  FETCH_PLAYERS: 'FETCH_PLAYERS',\n  JOIN_GATHERING: 'JOIN_GATHERING',\n  LEAVE_GATHERING: 'LEAVE_GATHERING',\n  UPDATE_STATUS: 'UPDATE_STATUS',\n};\n\nexport const gameActions = {\n  GAME_REQUESTED: 'GAME_REQUESTED',\n  GAME_CREATED: 'GAME_CREATED',\n  GAME_STARTED: 'GAME_STARTED',\n  GAME_ENDED: 'GAME_ENDED',\n  MAKE_PLAY: 'MAKE_PLAY',\n  PLAY_IN_PROGRESS: 'PLAY_IN_PROGRESS',\n  PLAY_RECEIVED: 'PLAY_RECEIVED',\n  ROUND_OUTCOME: 'ROUND_OUTCOME',\n  GAME_UPDATE: 'GAME_UPDATE',\n  GAME_IN_PROGRESS: 'GAME_IN_PROGRESS',\n};\n\nexport const modalActions = {\n  OPEN_AUTHENTICATION_MODAL: 'OPEN_AUTHENTICATION_MODAL',\n  CLOSE_AUTHENTICATION_MODAL: 'CLOSE_AUTHENTICATION_MODAL',\n  TOGGLE_AUTHENTICATION_MODAL: 'TOGGLE_AUTHENTICATION_MODAL',\n  MODAL_MESSAGE: 'MODAL_MESSAGE',\n};\n","// export const GAME_IN_PROGRESS = 'GAME_IN_PROGRESS';\n\nconst gameStatus = {\n  NO_GAME: 'NO_GAME',\n\n  // Game has began, but no other player actions have taken place yet\n  GAME_STARTED: 'GAME_STARTED',\n\n  // Neither player has made a move since the last round was resolved. This could be used to avoide 'GAME_STARTED' from being necessary\n  WAITING_FOR_BOTH_PLAYERS: 'WAITING_FOR_BOTH_PLAYERS',\n\n  // The player has made their move, and app is waiting for opponent. The app should disable user's ability to make another play while waiting\n  PLAY_MADE_WAITING_FOR_OPPONENT: 'PLAY_MADE_WAITING_FOR_OPPONENT',\n\n  // The player's opponent has made move and is waiting for user to still play\n  OPPONENT_PLAY_WAITING_FOR_USER: 'OPPONENT_PLAY_WAITING_FOR_USER',\n\n  // Both players have made their play. App is determining winner. Neither player should be able to make their next move during this status\n  DETERMINING_ROUND_WINNER: 'DETERMINING_ROUND_WINNER',\n\n  // Game is ended. Either due to player selecting to end the game, or because either player has won enough games to win the match (default is best of 5 rounds)\n  GAME_ENDED: 'GAME_ENDED',\n};\n\nexport default gameStatus;\n","import { combineReducers } from \"redux\";\n\n// import data from \"./dataReducer\";\nimport auth from './authReducer';\nimport gathering from './gatheringReducer';\nimport game from './gameReducer';\nimport modals from './modalsReducer';\n\nexport default combineReducers({\n  // data,\n  auth,\n  gathering,\n  game,\n  modals,\n});\n","// import { FETCH_USER } from '../actions/types';\nimport { userActions } from '../actions/types';\n\n// export default (state = false, action) => {\nexport default (state = null, action) => {\n  // console.log('in auth reducer, state:', state, 'action:', action);\n  // if (Object.keys(userActions).indexOf(action.type) > -1) {\n  //   console.log('in auth reducer, state:', state, 'action:', action);\n  // }\n  switch (action.type) {\n    case userActions.FETCH_USER:\n      return action.payload || null;\n    default:\n      return state;\n  }\n};\n","// import { FETCH_PLAYERS, JOIN_GATHERING, LEAVE_GATHERING } from \"../actions/types\";\nimport { gatheringActions } from '../actions/types';\n\nexport default (state = {}, action) => {\n  // console.log('received dispatch in Gathering reducer, state:', state, 'action:', action);\n  // if ([FETCH_PLAYERS, JOIN_GATHERING, LEAVE_GATHERING].indexOf(action.type) > -1) {\n  // if (Object.keys(gatheringActions).indexOf(action.type) > -1) {\n  //   console.log('received dispatch in Gathering reducer, state:', state, 'action:', action);\n  // }\n  switch (action.type) {\n    case gatheringActions.JOIN_GATHERING:\n      return action.payload;\n    case gatheringActions.FETCH_PLAYERS:\n      return { ...state, onlinePlayers: action.payload };\n    case gatheringActions.LEAVE_GATHERING:\n      return {};\n    default:\n      return state;\n  }\n};\n","import {\n  // GAME_CREATED,\n  // GAME_STARTED,\n  // GAME_ENDED,\n  // MAKE_PLAY,\n  // PLAY_RECEIVED,\n  gameActions,\n} from \"../actions/types\";\nimport gameStatuses from '../gameStatuses';\n\nconst getGameStateAfterPlayMade = (state, actionPayload) => {\n  // if (actionPayload && actionPayload.status === 'attempted') {\n  console.log('in getGameStateAfterPlayMade, state', state);\n  const { gameStatus } = state;\n  const newGameStatus = gameStatus === gameStatuses.OPPONENT_PLAY_WAITING_FOR_USER ? gameStatuses.DETERMINING_ROUND_WINNER : gameStatuses.PLAY_MADE_WAITING_FOR_OPPONENT;\n  const newState = { ...state, gameStatus: newGameStatus, playerPlay: actionPayload.playerAction };\n  // console.log('returning newState', newState);\n  return newState;\n  // }\n  // else {\n  //   return state;\n  // }\n};\n\nconst getGameStateAfterPlayReceived = (state, actionPayload) => {\n  // console.log('in getGameStateAfterPlayReceived, actionPayload', actionPayload);\n  console.log('in getGameStateAfterPlayReceived, state:', state);\n  // const { gameStatus } = state;\n  // const newGameStatus = gameStatus === gameStatuses.PLAY_MADE_WAITING_FOR_OPPONENT ? gameStatuses.DETERMINING_ROUND_WINNER : gameStatuses.OPPONENT_PLAY_WAITING_FOR_USER;\n  // const newState = { ...state, gameStatus: newGameStatus, playerPlay: actionPayload.playerAction };\n  // const { currentGameData } = state;\n  const { player1: player1Uid, player2: player2Uid, round, gameInProgress, } = state.gameData;\n  const { myUid } = state;\n  const { player: player1or2 } = actionPayload;\n  const playerUid = player1or2 === 'player1' ? player1Uid : player1or2 === 'player2' ? player2Uid : '';\n  // console.log('actionPayload', actionPayload, 'player1Uid', player1Uid, 'player2Uid', player2Uid, playerUid);\n  if ((playerUid !== player1Uid && playerUid !== player2Uid) || playerUid === '') {\n    // console.log('returning early from getGameStateAfterPlayReceived');\n    return state;\n  }\n  // console.log('not returning early from getGameStateAfterPlayReceived');\n  // const \n  // const myUid = \n  // const player1or2 = myUid === player1 ? 'player1' : 'player2';\n  \n  // console.log('key', key);\n  // const { playerUid } = actionPayload;\n  // const { myUid, opponentUid } = state;\n  // const { myUid, } = state;\n  const key = `${actionPayload.player}Actions`;\n  const playerActions = state.gameData.round >= actionPayload.playerActions.length ? actionPayload.playerActions : state.gameData[key];\n  // const gameData = { ...state.gameData, [key]: actionPayload.playerActions };\n\n  const gameData = { ...state.gameData, [key]: playerActions };\n  // const gameData = { ...state.gameData, [key]: actionPayload.length <= state.gameData.round ? actionPayload.playerActions : state.gameData[key] };\n  // const newGameStatus = gameStatus;\n  // console.log('gameData:', gameData);\n  // console.log('playerUid', playerUid, 'myUid', myUid, 'check:', playerUid === myUid);\n  const player1Actions = gameData.player1Actions || [];\n  const player2Actions = gameData.player2Actions || [];\n  // const newGameStatus = gameData.player1Actions.length === gameData.player2Actions.length ?\n  const newGameStatus = !gameInProgress ?\n    gameStatuses.GAME_ENDED :\n    player1Actions.length === player2Actions.length ?\n      player1Actions.length === round ?\n        gameStatuses.DETERMINING_ROUND_WINNER :\n        gameStatuses.WAITING_FOR_BOTH_PLAYERS :\n      playerUid === myUid ?\n        gameStatuses.PLAY_MADE_WAITING_FOR_OPPONENT :\n        gameStatuses.OPPONENT_PLAY_WAITING_FOR_USER;\n  const newState = { ...state, gameStatus: newGameStatus, gameData };\n  // const newState = { ...state, gameStatus: newGameStatus, [key]: actionPayload.playerActions };\n  // console.log('returning newState', newState);\n  return newState;\n};\n\n// export default (state = { gameStatus: gameStatuses.GAME_STARTED }, action) => {\nexport default (state = { gameStatus: gameStatuses.NO_GAME }, action) => {\n  if (Object.keys(gameActions).indexOf(action.type) > -1) {\n    console.log('received game action dispatch in gameReducer, state:', state, 'action', action);\n  }\n  switch (action.type) {\n    // case GAME_CREATED:\n    //   // GAME_CREATED is signaled after creation of game. It is separate from the GAME_STARTED signal that listens for every game created and signals if the user is one of the players for that game\n    //   console.log('detected GAME_CREATED');\n    //   return state;\n    //   // return action.payload;\n    case gameActions.GAME_STARTED:\n      // console.log('detected GAME_STARTED');\n      return { ...state, gameKey: action.payload.gameKey, gameData: action.payload.gameData, gameStatus: gameStatuses.GAME_STARTED, myUid: action.payload.myUid, opponentUid: action.payload.gameData.player2 };\n    //   return action.payload;\n    case gameActions.GAME_ENDED:\n      return { ...state, gameKey: null, gameData: null, gameStatus: gameStatuses.GAME_ENDED };\n    case gameActions.MAKE_PLAY:\n      // console.log('detected MAKE_PLAY, action', action);\n      // return state;\n      // return { ...state, gameStatus: gameStatus.\n      return getGameStateAfterPlayMade(state, action.payload);\n    case gameActions.PLAY_RECEIVED:\n      // console.log('deteced PLAY_RECEIVED, action', action);\n      // return state;\n      return state.gameData ? getGameStateAfterPlayReceived(state, action.payload) : state;\n    case gameActions.ROUND_OUTCOME:\n      // const newGameData = { ...state.gameData, round: \n      const { player1Wins, player2Wins, maxNumberOfGames, round } = action.payload;\n      const gameOver = player1Wins + player2Wins >= maxNumberOfGames && Math.abs(player1Wins - player2Wins) >= 2;\n      const newRound = gameOver ? round : round + 1;\n      // const newRound = action.payload.player1Actions.length + 1\n      return { ...state, gameData: { ...action.payload, round: newRound }, gameStatus: gameStatuses.WAITING_FOR_BOTH_PLAYERS };\n    case gameActions.GAME_UPDATE:\n      console.log('in reducer GAME_UPDATE, action.payload', action.payload);\n      return { ...state, gameData: action.payload, gameStatus: action.payload && action.payload.gameInProgress ? gameStatuses.WAITING_FOR_BOTH_PLAYERS : gameStatuses.GAME_ENDED };\n    case gameActions.GAME_IN_PROGRESS:\n      console.log('in reducer GAME_IN_PROGRESS, action.payload', action.payload);\n      return { ...state, gameData: { ...state.gameData, gameInProgress: action.payload, }, gameStatus: !action.payload ? gameStatuses.GAME_ENDED : state.gameStatus };\n    default:\n      return state;\n  }\n};\n","// import { FETCH_USER } from '../actions/types';\nimport { modalActions } from '../actions/types';\n\n// export default (state = false, action) => {\nexport default (state = { authenticationModalOpen: false }, action) => {\n  // console.log('in modals reducer, state:', state, 'action:', action);\n  // if (Object.keys(modalActions).indexOf(action.type) > -1) {\n  //   console.log('in auth reducer, state:', state, 'action:', action);\n  // }\n  switch (action.type) {\n    case modalActions.OPEN_AUTHENTICATION_MODAL:\n      return { ...state, authenticationModalOpen: true, ...action.payload };\n    case modalActions.CLOSE_AUTHENTICATION_MODAL:\n      return { ...state, authenticationModalOpen: false, ...action.payload };\n    case modalActions.TOGGLE_AUTHENTICATION_MODAL:\n      return { ...state, authenticationModalOpen: !state.authenticationModalOpen, ...action.payload };\n    case modalActions.MODAL_MESSAGE:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","\nconst config = {\n  apiKey: \"AIzaSyBkyF3iDkn4oj30QNEJ8vsnIF57PY0xki0\",\n  authDomain: \"rps-game-d93c5.firebaseapp.com\",\n  databaseURL: \"https://rps-game-d93c5.firebaseio.com\",\n  projectId: \"rps-game-d93c5\",\n  storageBucket: \"rps-game-d93c5.appspot.com\",\n  messagingSenderId: \"131891175803\"\n};\n\nexport default config;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nimport config from './config/firebase';\n// Initialize Firebase\nfirebase.initializeApp(config);\n\nexport const refs = {\n  gathering: 'OnlineUsers',\n  games: 'Games',\n};\n\n\n// export const provider = new firebase.auth.GoogleAuthProvider();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const githubProvider = new firebase.auth.GithubAuthProvider();\n// export const authRef = firebase.auth();\nexport default firebase;\n","/**\n * A Javascript module to keep list (and count) of online users in a Firebase web app - by isolated rooms or globally.\n *\n * Initial idea from - http://stackoverflow.com/a/15982583/228648\n *\n * @url : https://gist.github.com/ajaxray/17d6ec5107d2f816cc8a284ce4d7242e\n * @auther : Anis Uddin Ahmad <anis.programmer@gmail.com>\n *\n * w:ajaxray.com | t:@ajaxray\n */\nvar Gathering = (function() {\n\n    var randomName = function () {\n        return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);\n    };\n\n    function Gathering(databaseReference, roomName) {\n\n        this.db = databaseReference;\n        this.roomName = roomName || 'globe';\n\n        this.room = this.db.ref(\"gatherings/\" + encodeURIComponent(this.roomName));\n        this.myName = '';\n        this.user = null;\n\n        this.updateStatus = function(uid, data) {\n            this.myName = data;\n            var presenceRef = this.db.ref(\".info/connected\");\n            var self = this;\n            presenceRef.on(\"value\", function(snap) {\n                if (snap.val() && self.user) {\n                    self.user.onDisconnect().remove();\n                    self.user.set(self.myName);\n                }\n            });\n        }\n\n        // this.join = function(uid, displayName) {\n        //     if(this.user) {\n        //         // console.error('Already joined.');\n        //         console.log('Already joined.');\n        //         return false;\n        //     }\n\n        //     this.myName = displayName || 'Anonymous - '+ randomName();\n        //     this.user = uid ? this.room.child(uid) : this.room.push();\n\n        //     // Add user to presence list when online.\n        //     var self = this;\n        //     var presenceRef = this.db.ref(\".info/connected\");\n        //     presenceRef.on(\"value\", function(snap) {\n        //         if (snap.val()) {\n        //             self.user.onDisconnect().remove();\n        //             self.user.set(self.myName);\n        //         }\n        //     });\n\n        //     return this.myName;\n        // };\n\n        this.join = function(uid, displayName) {\n            return new Promise((resolve, reject) => {\n            if(this.user) {\n                // console.error('Already joined.');\n                console.log('Already joined.');\n                // return false;\n                resolve ( false );\n            }\n\n            this.myName = displayName || 'Anonymous - '+ randomName();\n            this.user = uid ? this.room.child(uid) : this.room.push();\n\n            // Add user to presence list when online.\n            var self = this;\n            var presenceRef = this.db.ref(\".info/connected\");\n            presenceRef.on(\"value\", function(snap) {\n                if (snap.val()) {\n                    self.user.onDisconnect().remove();\n                    self.user.set(self.myName);\n                }\n            });\n\n            // return this.myName;\n            resolve ( this.myName );\n            });\n        }\n\n        this.leave = function() {\n            this.user.remove();\n            this.myName = '';\n        };\n\n        this.over = function () {\n            this.room.remove();\n        };\n\n        this.onUpdated = function (callback) {\n            if('function' == typeof callback) {\n                this.room.on(\"value\", function(snap) {\n                    callback(snap.numChildren(), snap.val());\n                });\n            } else {\n                console.error('You have to pass a callback function to onUpdated(). That function will be called (with user count and hash of users as param) every time the user list changed.');\n            }\n        };\n    }\n\n    return Gathering;\n})();\n\nexport default Gathering;\n","// import firebase from '../firebase';\nimport firebase, { refs } from '../firebase';\n// import { gatheringRef } from '../firebase';\n// import Gathering from '../gathering';\nimport {\n  gameActions,\n} from './types';\n\n// const GamesRef = firebase.database().ref(refs.games);\nexport const GamesRef = () => firebase.database().ref(refs.games);\nexport const GamesRefChild = (childRef) => firebase.database().ref(`${refs.games}/${childRef}`);\n\nexport const endGame = gameUID => dispatch => {\n  // console.log('GamesRef', GamesRef && GamesRef().toString());\n  // Object.keys(GamesRef()).forEach(key => console.log('GamesRef key:', key, 'value:', GamesRef()[key] && GamesRef()[key].toString()));\n  // console.log('GamesRef()', GamesRef());\n  return GamesRef().child(gameUID).remove()\n    .then(() => {\n      // console.log('removed game, ref:', gameUID);\n      dispatch({\n        type: gameActions.GAME_ENDED,\n        payload: { gameUID },\n      });\n    })\n    .catch(error => {\n      // console.log('error removing game');\n      dispatch({\n        type: gameActions.GAME_ENDED,\n        payload: { error: error.toString() },\n      });\n    });\n  // GamesRef().child(app.gameID).remove();\n};\n\nexport const createEndGameListener = gameRef => dispatch => {\n  // console.log('in createEndGameListener');\n  // return gameRef.child('gameInProgress').on('value', (snapshot) => {\n  gameRef.child('gameInProgress').on('value', (snapshot) => {\n    console.log('received gameInProgress change indicator');\n    // dispatch({\n    //   type: gameActions.GAME_IN_PROGRESS,\n    //   payload: snapshot.val(),\n    // });\n    gameRef.once('value', (snapshot) => {\n      const gameData1 = snapshot.val();\n      dispatch({\n        type: gameActions.GAME_UPDATE,\n        payload: gameData1,\n      });\n    });\n  });\n\n  return gameRef.child('gameClosed').on('value', (snapshot) => {\n    console.log('received endGame indicator from firebase, snapshot.val()', snapshot.val());\n    // if (snapshot.val() == null || !snapshot.val()) {\n    if (snapshot.val() == null || snapshot.val() === true) {\n      const gameUID = gameRef.key;\n      dispatch({\n        type: gameActions.GAME_ENDED,\n        payload: { gameUID }\n      });\n    }\n  });\n};\n\n\n// const createOpponentActionListener = (dispatch, opponent) => {\n// const createOpponentActionListener = (gameRef, opponent) => dispatch => {\n//   // this is where the app checks for (or waits for) an opponent action\n//   // opponent is string that says 'player1' or 'player2'\n//   const refString = `${opponent}Actions`;\n//   console.log('creating opponent action listener', refString);\n//   return gameRef.child(refString).on('value', (snapshot) => {\n//     console.log('received updated on opponent action, snapshot.val()', snapshot.val());\n//     const play = snapshot.val();\n//     if (play && Object.keys(play).length === 1) {\n//       dispatch({\n//         type: gameActions.PLAY_RECEIVED,\n//         payload: { player: opponent, play: Object.keys(play)[0] }\n//       });\n//     }\n//   });\n// };\n\nconst createPlayerActionListener = (gameRef, player) => dispatch => {\n  // this is where the app checks for (or waits for) a player action\n  // player is string that says 'player1' or 'player2'\n  const refString = `${player}Actions`;\n  // console.log('creating player action listener', refString);\n  return gameRef.child(refString).on('value', (snapshot) => {\n    console.log('received updated on player action, snapshot.val()', snapshot.val());\n    const plays = snapshot.val();\n    const playerActions = plays && Object.keys(plays).length > 0 ? Object.keys(plays).map(key => plays[key]) : [];\n    // if (play && Object.keys(play).length === 1) {\n    if (playerActions.length > 0) {\n      console.log('playerActions for player', player, playerActions);\n      dispatch({\n        type: gameActions.PLAY_RECEIVED,\n        payload: { player, playerActions }\n      });\n    }\n  });\n};\n\nconst createRoundUpdateListener = (gameRef) => dispatch => {\n\n  // console.log('creating player action listener', refString);\n  return gameRef.child('round').on('value', () => {\n    console.log('createRoundUpdateListener listener triggered');\n    return gameRef.once('value', (snapshot) => {\n      console.log('createRoundUpdateListener game snapshot', snapshot.val());\n      const gameData = snapshot.val();\n      dispatch({\n        type: gameActions.GAME_UPDATE,\n        // payload: { gameKey: snapshotKey, gameData: game }\n        payload: gameData\n      });\n    });\n  });\n};\n\nexport const newGameListenerEvent = (myUid, snapshotKey, snapshotVal) => dispatch => {\n  // console.log('in newGameListenerEvent, myUid', myUid, 'snapshotVal', snapshotVal);\n  // return GamesRef().on(\"child_added\", (snapshot) => {\n  const game = snapshotVal;\n  console.log('detected new game added to GamesRef, myUid:', myUid, 'game:', game);\n  // if ((game.player1 === myUid || game.player2 === myUid) && myUid.length > 1 && game.gameInProgress) {\n  if ((game.player1 === myUid || game.player2 === myUid) && myUid.length > 1 && !game.gameClosed) {\n    console.log('new game is my game');\n    // would like to add a check here or somewhere that prevents me from starting a game if I'm in an existing one.\n    const player1Actions = game.player1Actions ? Object.keys(game.player1Actions).map(key => game.player1Actions[key]) : [];\n    const player2Actions = game.player2Actions ? Object.keys(game.player2Actions).map(key => game.player2Actions[key]) : [];\n    const gameData = { ...game, player1Actions, player2Actions };\n    dispatch({\n      type: gameActions.GAME_STARTED,\n      // payload: { gameKey: snapshotKey, gameData: game }\n      payload: { gameKey: snapshotKey, gameData, myUid }\n    });\n    // const { player1, player2 } = game;\n    const { player1 } = game;\n    const player1or2 = myUid === player1 ? 'player1' : 'player2';\n    const opponent = myUid !== player1 ? 'player1' : 'player2';\n    // const gameRef = GamesRef().child(snapshotKey);\n    const gameRef = GamesRefChild(snapshotKey);\n\n    // createGameListener(GamesRef().child(snapshot.key), player1or2);\n    // createOpponentActionListener(dispatch, opponent);\n    dispatch(createRoundUpdateListener(gameRef));\n    dispatch(createEndGameListener(gameRef));\n    // dispatch(createOpponentActionListener(gameRef, opponent));\n    dispatch(createPlayerActionListener(gameRef, opponent));\n    dispatch(createPlayerActionListener(gameRef, player1or2));\n  }\n  else {\n    // console.log('new game is not my game');\n  }\n  // });\n};\n\n\nexport const createNewGameListener = myUid => dispatch => {\n  // console.log('creating newGame listener, myUid', myUid);\n  // return dispatch(newGameListenerEvent(myUid\n  return GamesRef().on('child_added', (snapshot) => {\n    // console.log('newGameListener fired, myUid:', myUid);\n    return dispatch(newGameListenerEvent(myUid, snapshot.key, snapshot.val()));\n  });\n  // return GamesRef().on(\"child_added\", (snapshot) => {\n  //   const game = snapshot.val();\n  //   console.log('detected new game added to GamesRef, myUid:', myUid, 'game:', game);\n  //   if (game.player1 === myUid || game.player2 === myUid) {\n  //     console.log('new game is my game');\n  //     // would like to add a check here or somewhere that prevents me from starting a game if I'm in an existing one.\n  //     dispatch({\n  //       type: gameActions.GAME_STARTED,\n  //       payload: { gameKey: snapshot.key, gameData: game }\n  //     });\n  //     // const { player1, player2 } = game;\n  //     const { player1 } = game;\n  //     // const player1or2 = myUid === player1 ? 'player1' : 'player2';\n  //     const opponent = myUid !== player1 ? 'player1' : 'player2';\n  //     const gameRef = GamesRef().child(snapshot.key);\n\n  //     // createGameListener(GamesRef().child(snapshot.key), player1or2);\n  //     // createOpponentActionListener(dispatch, opponent);\n  //     dispatch(createEndGameListener(gameRef));\n  //     dispatch(createOpponentActionListener(gameRef, opponent));\n  //   }\n  //   else {\n  //     console.log('new game is not my game');\n  //   }\n  // });\n};\n\n// export const createGameListener = (gameRef, player1or2) => dispatch => {\n//   // console.log('creating listener for gameRef', gameRef);\n//   // GameRef = gameRef;\n//   gameRef.on('value', (snapshot) => {\n//     console.log('received update for game, snapshot.val()', snapshot.val());\n//   });\n//   // GameRef.on\n// };\n\n\nexport const updateWithRoundOutcome = (gameData, gameKey, gameRef) => (dispatch) => {\n  // const refString = `${player}Actions`;\n  // console.log('creating player action listener', refString);\n  // console.log('in updateWithRoundOutcome, gameData:', gameData);\n  const { maxNumberOfGames } = gameData;\n  const minNumberOfWins = Math.ceil(maxNumberOfGames / 2);\n  // const { player1Actions, player2Actions } = gameData;\n  const player1Actions = Object.values(gameData.player1Actions);\n  const player2Actions = Object.values(gameData.player2Actions);\n  // console.log('player1Actions', player1Actions, 'player2Actions', player2Actions); \n  const wins = player1Actions.map((player1Action, i) => {\n    const player2Action = player2Actions[i];\n    // console.log('player1Action', player1Action, 'player2Action', player2Action);\n    // go through all scenarios where player 1 loses. \n    // If one of them hits, return 2 (for player 2 wins).\n    // otherwise, they either tie (return 0) or player 1 wins (return 1)\n    if (player1Action === 'rock' && player2Action === 'paper') {\n      return 2;\n    }\n    else if (player1Action === 'paper' && player2Action === 'scissors') {\n      return 2;\n    }\n    else if (player1Action === 'scissors' && player2Action === 'rock') {\n      return 2;\n    }\n    else if (player1Action === player2Action) {\n      // tie\n      return 0;\n    }\n    else {\n      // player 1 wins\n      return 1;\n    }\n  });\n  console.log('wins:', wins);\n  const player1Wins = wins.reduce((acc, outcome) => (outcome === 1 ? 1 : 0) + acc, 0);\n  const player2Wins = wins.reduce((acc, outcome) => (outcome === 2 ? 1 : 0) + acc, 0);\n  const ties = wins.reduce((acc, outcome) => (outcome === 0 ? 1 : 0) + acc, 0);\n  // set overall winner equal to the player number, or 0 if game is not over\n  const winner = player1Wins >= minNumberOfWins ? 1 : player2Wins >= minNumberOfWins ? 2 : 0;\n  const gameInProgress = (winner === 0);\n  // increment round unless game is over. Get current round from number of player actions\n  const round = player1Actions.length + (winner === 0 ? 1 : 0);\n  // console.log('ties', ties, 'winner', winner, 'gameInProgress', gameInProgress, 'minNumberOfWins', minNumberOfWins);\n  // const gameRef = GamesRef().child(gameKey);\n  if (typeof gameRef === 'undefined') {\n    gameRef = GamesRefChild(gameKey);\n  }\n  // console.log('gameRef', gameRef);\n  // console.log('gameKey', gameKey);\n  gameRef.update({\n    player1Wins, player2Wins, ties, gameInProgress, round, winner,\n  });\n  // }).then(() => {\n  //   if (winner > 0) {\n  //     gameRef.once('value', (snapshot) => {\n  //       const gameData1 = snapshot.val();\n  //       dispatch({\n  //         type: gameActions.GAME_UPDATE,\n  //         payload: gameData1,\n  //       });\n  //     });\n  //   }\n  // });\n\n  // return dispatch({\n  //   type: gameActions.ROUND_OUTCOME,\n  //   payload: {\n  //     ...gameData,\n  //     // player1Actions,\n  //     // player2Actions,\n  //     player1Wins,\n  //     player2Wins,\n  //     ties,\n  //     gameInProgress,\n  //     round,\n  //   },\n  // });\n};\n\nexport const getRoundOutcome = (GameKey) => (dispatch) => {\n  // const refString = `${player}Actions`;\n  // console.log('creating player action listener', refString);\n  const GameRef = GamesRef().child(GameKey);\n  return GameRef.once('value', (snapshot) => {\n    console.log('received updated gameData from getRoundOutcome, snapshot.val()', snapshot.val());\n    const gameData = snapshot.val();\n    return dispatch(updateWithRoundOutcome(gameData, GameKey));\n    // const playerActions = plays && Object.keys(plays).length > 0 ? Object.keys(plays).map(key => plays[key]) : [];\n    // if (play && Object.keys(play).length === 1) {\n    // if (playerActions.length > 0) {\n    // return dispatch({\n    //   type: gameActions.ROUND_OUTCOME,\n    //   payload: { gameData }\n    // });\n  });\n};\n\nexport const makePlay = (GameKey, player1or2, playerUid, playerAction) => dispatch => {\n  // console.log('in makePlay, gameRef:', GameKey, 'player1or2', player1or2, 'playerUid', playerUid, 'playerAction', playerAction);\n  const gameValRef = `${player1or2}Actions`;\n\n  // console.log('GamesRef', GamesRef);\n  // console.log('player1or2:', player1or2, 'gameValRef', gameValRef, 'playerAction', playerAction);\n  if (player1or2 && playerAction) {\n    dispatch({\n      type: gameActions.MAKE_PLAY,\n      payload: { player1or2, playerAction },\n    });\n    const GameRef = GamesRef().child(GameKey);\n    // const GameRef = Games\n\n    // only submit the move if the current count of playerMoves in firebase is less than the current round\n    // return GameRef.child(gameValRef).\n\n    return GameRef.child(gameValRef).push(playerAction)\n      .then(() => {\n      // .then(ref => {\n        // console.log('added player action, playerAction:', playerAction, 'gameValRef', gameValRef, 'ref:', ref);\n      })\n      // });\n      .catch(err => console.error('error on makePlay function', err));\n  }\n  else {\n    return Promise.reject(new Error('unable to make play'));\n  }\n\n  // // This is for only having a single player move recorded in Firebase, and just updating on each round. I replaced this with a collection of moves, one for each round\n  // return GameRef.update({\n  //   // [player1or2 + \"_Actions\"]: playerAction\n  //   [gameValRef]: playerAction\n  // }).then((playActionRef) => {\n  //   console.log('playActionRef', playActionRef);\n  //   // this.setState({ playInProgress: true });\n  // });\n};\n\nexport const requestGame = (user, otherPlayer) => dispatch => {\n  // console.log('in requestGame action request, user:', user, 'otherPlayer', otherPlayer);\n  dispatch({\n    type: gameActions.GAME_REQUESTED,\n    payload: { user, otherPlayer }\n  });\n\n  const { uid: player1, displayName: player1Name } = user;\n  // console.log('player1', player1);\n  const maxNumberOfGames = 5;\n  \n  const { uid: player2, displayName: player2Name } = otherPlayer;\n  if (player1 && player2 && player1.length > 0 && player2.length > 0) {\n    // console.log('creating game');\n    const newGame = {\n      player1,\n      player2,\n      player1Wins: 0,\n      player2Wins: 0,\n      player1Name,\n      player2Name,\n      ties: 0,\n      maxNumberOfGames,\n      gameInProgress: true,\n      gameClosed: false,\n      winner: 0,\n      round: 1,\n    };\n    // console.log('GamesRef():', GamesRef().toString());\n    // Object.keys(GamesRef()).forEach(key => console.log('GamesRef key:', key, 'value:', GamesRef()[key] && GamesRef()[key].toString()));\n    // return Promise.resolve(true);\n    return GamesRef().push(newGame)\n      .then(() => {\n      // .then(ref => {\n        // console.log('created new game, key is', ref.key);\n        // return Promise.resolve(true);\n        // rather than dispatch message, will use the firebase listener for new games to signal the new game\n        // that way, the user will be notified of games created by other users as well as one the user creates.\n        return dispatch({ type: gameActions.GAME_CREATED });\n      // });\n      })\n      .catch(err => {\n        console.log('error when creating new game', err);\n        return Promise.reject(err);\n      });\n  }\n  else {\n    console.log('not creating new game');\n    return Promise.reject(new Error('not creating new game'));\n  }\n};\n\n","import firebase from '../firebase';\n// import { gathering } from '../firebase';\nimport Gathering from '../gathering';\n// import { FETCH_PLAYERS, JOIN_GATHERING, LEAVE_GATHERING } from './types';\nimport { gatheringActions } from './types';\nimport { createNewGameListener } from './game';\n\n// export const fetchPlayers = (gathering) => dispatch => {\n//   // console.log('in fetchPlayers action, gathering', gathering);\n//   if (gathering != null && typeof gathering.onUpdated === 'function') {\n//     // console.log('found gathering');\n//     gathering.onUpdated((count, players) => { \n//       // console.log(\"gathering players\", players, 'count', count);\n//       const onlinePlayers = count > 0 && players && Object.keys(players).length > 0 ?\n//         Object.keys(players)\n//           // .filter(uid => uid !== user.uid)\n//           .map(uid => ({ ...players[uid], uid })) :\n//         [];\n//       // console.log('dispatching online players ', onlinePlayers);\n//       dispatch({\n//         type: FETCH_PLAYERS,\n//         payload: onlinePlayers\n//       });\n//       // this.setState({ onlinePlayers });\n//     });\n//   }\n//   else {\n//     // console.log('did not find gathering ref');\n//   }\n// };\n\nexport const joinGathering = (user) => dispatch => {\n  // console.log('in joinGathering action, user', user);\n  const gathering = new Gathering(firebase.database(), 'OnlineUsers');\n  // gathering = new Gathering(firebase.database(), 'OnlineUsers');\n  const inGame = false;\n  const { photoURL } = user;\n  // gathering.join(user.id, { displayName: user.displayName, inGame, photoURL });\n  gathering.join(user.uid, { displayName: user.displayName, inGame, photoURL })\n    .then(() => {\n      // console.log('in then clause of joinGathering, gathering:', gathering);\n      // fetchPlayers(gathering);\n      gathering.onUpdated((count, players) => { \n        // console.log(\"gathering players\", players, 'count', count);\n        const onlinePlayers = count > 0 && players && Object.keys(players).length > 0 ?\n          Object.keys(players)\n            // .filter(uid => uid !== user.uid)\n            .map(uid => ({ ...players[uid], uid })) :\n          [];\n        // console.log('dispatching online players ', onlinePlayers);\n        dispatch({\n          type: gatheringActions.FETCH_PLAYERS,\n          payload: onlinePlayers\n        });\n        // this.setState({ onlinePlayers });\n        // get my gathering id\n        // const myGatheringUid = onlinePlayers.find(player => player.uid === user.uid);\n        // dispatch({\n        //   type: 'UPDATE_ID',\n        //   payload: myGatheringUid\n        // });\n      });\n      // createNewGameListener(dispatch, user.uid);\n      dispatch(createNewGameListener(user.uid));\n    })\n    .catch(error => console.log('error when joining gathering', error));\n  // gathering.onUpdated((count, players) => { \n  //   console.log(\"gathering players\", players, 'count', count);\n  //   const onlinePlayers = count > 0 && players && Object.keys(players).length > 0 ?\n  //     Object.keys(players)\n  //       .filter(uid => uid !== user.uid)\n  //       .map(uid => ({ ...players[uid], uid })) :\n  //     [];\n  //   // this.setState({ onlinePlayers });\n  // });\n  dispatch({\n    type: gatheringActions.JOIN_GATHERING,\n    payload: gathering\n    // payload: null\n  });\n};\n\nexport const leaveGathering1 = (user, gathering) => dispatch => {\n  console.log('in leaveGathering action, user', user);\n  // const gathering = \n  gathering.leave();\n  dispatch({\n    type: gatheringActions.LEAVE_GATHERING,\n    payload: null\n  });\n};\n\nexport const changePlayerStatus = (user, gathering) => dispatch => {\n  console.log('running changePlayerStatus, user:', user, 'gathering', gathering);\n  gathering.updateStatus(user.uid, user);\n  dispatch({\n    type: gatheringActions.UPDATE_STATUS,\n    payload: user,\n  });\n};\n// app.gathering.updateStatus(authUser.uid, {displayName: authUser.displayName, inGame: false})\n\n\n// export const leaveGathering = () => {\nexport const leaveGathering = (gathering) => dispatch => {\n  // console.log('in leaveGathering action, user', user);\n  // const gathering = \n  // const gathering = new Gathering(firebase.database(), 'OnlineUsers');\n  // const gathering = firebase.database().ref('gatherings/OnlineUsers');\n  // const gathering = firebase.database().ref('gatherings');\n  // gathering.on('value', snapshot => console.log('gathering snapshot:', snapshot.val()));\n  // gathering.leave();\n  if (gathering != null && typeof gathering !== 'undefined') {\n    // console.log('gathering', gathering);\n    gathering.leave();\n    dispatch({\n      type: gatheringActions.LEAVE_GATHERING,\n      // payload: null\n    });\n  }\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  // CardTitle,\n  CardText,\n  CardFooter,\n  CardHeader,\n  Row,\n  Col,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\n// import firebase from '../firebase';\n// import LoadingSpinner from './LoadingSpinner';\nimport {\n  endGame,\n  makePlay,\n  getRoundOutcome,\n} from '../actions/game';\n\nimport {\n  changePlayerStatus,\n} from '../actions/gatheringActions';\n\nimport gameStatuses from '../gameStatuses';\n\n\nclass Game extends Component {\n  // state = this.getStat();\n\n  componentDidMount() {\n    // console.log('in componentDidMount');\n    const { user, gathering, } = this.props;\n    const inGame = true;\n    const player = this.props.players.find(player1 => player1.uid === user.uid);\n    const player1 = { ...player, inGame };\n    this.props.changePlayerStatus(player1, gathering);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { gameStatus, myUid, } = this.props.game;\n    // console.log('myUid', myUid, 'this.props.game.gameData', this.props.game.gameData.player1);\n    if (gameStatus === gameStatuses.DETERMINING_ROUND_WINNER && gameStatus !== prevProps.game.gameStatus && prevProps.game.gameStatus.length > 0 && myUid === this.props.game.gameData.player1) {\n      this.props.getRoundOutcome(this.props.gameUID);\n    }\n    // const { player1Wins, player2Wins, ties, round, playInProgress } = gameData;\n  }\n\n  getStat() {\n    console.log('running getStat');\n    const { user } = this.props;\n    const {\n      // gameInProgress,\n      // maxNumberOfGames,\n      player1: player1UID,\n      player2: player2UID,\n      player1Wins,\n      player2Wins,\n      player1Name,\n      player2Name,\n      ties,\n      winner,\n      // playInProgress,\n    } = this.props.game.gameData;\n    // const { uid: myUID, displayName: myName } = user;\n    const { uid: myUID, } = user;\n    // console.log(`player1UID ${player1UID}, player2UID ${player2UID}, myUID ${myUID}, player1UID === myUID: ${player1UID === myUID}`);\n    const player1 = { uid: player1UID, name: player1Name, wins: player1Wins };\n    const player2 = { uid: player2UID, name: player2Name, wins: player2Wins };\n    // const { uid: opponentUID, name: opponentName, wins: opponentWins } = player1UID === myUID ? player2 : player2UID === myUID ? player1 : null;\n    const { name: opponentName, wins: opponentWins } = player1UID === myUID ? player2 : player2UID === myUID ? player1 : {};\n    const { wins: myWins } = player1UID === myUID ? player1 : player2;\n    // const player1or2 = player1UID === myUID ? \"player1\" : \"player2\";\n\n    return ({\n      // myUID,\n      // opponentUID,\n      opponentName,\n      myWins,\n      opponentWins,\n      ties,\n      winner,\n      // maxNumberOfGames,\n      // gameInProgress,\n      // player1or2,\n      // playInProgress,\n    });\n  }\n\n\n  play = (e) => {\n    const { value: playerAction } = e.target;\n    // const player = playerid === game.player1 ? \"player1\" : \"player2\";\n    const { player1: player1UID, player2: player2UID } = this.props.game.gameData;\n    const { uid: myUID } = this.props.user;\n    const player1or2 = player1UID === myUID ? \"player1\" : player2UID === myUID ? \"player2\" : \"\";\n    // const { player1or2 } = this.state;\n    // console.log('e.target', e.target, 'playerAction ', playerAction);\n    // console.log('player1UID', player1UID, 'myUID', myUID, 'player1or2', player1or2, 'playerAction', playerAction);\n    if (playerAction.match(/(rock|paper|scissors)/) != null && player1or2 && player1or2.length > 1) {\n      const { gameKey } = this.props.game;\n      // this.props.makePlay(gameKey, player1or2, playerAction);\n      this.props.makePlay(gameKey, player1or2, myUID, playerAction);\n    }\n    else {\n      console.log('invalid playerAction or playerinfo', playerAction, player1or2);\n    }\n  }\n\n  endCurrentGame = () => {\n    console.log('ending current game');\n    if (this.props.endGame && this.props.gameUID) {\n      console.log('creating endGame action');\n      this.props.endGame(this.props.gameUID);\n    }\n  }\n\n  render = () => {\n    const {\n      opponentName,\n      // myUID,\n      // opponentUID,\n      myWins,\n      opponentWins,\n      ties,\n      winner,\n      // messages,\n      // maxNumberOfGames,\n      // gameInProgress,\n      // playInProgress,\n    } = this.getStat();\n    // } = this.state; \n\n    const { gameStatus, } = this.props.game;\n    const { gameInProgress, round } = this.props.game.gameData;\n    const playEnabled = gameInProgress && gameStatus !== gameStatuses.PLAY_MADE_WAITING_FOR_OPPONENT && gameStatus !== gameStatuses.DETERMINING_ROUND_WINNER;\n    console.log('gameInProgress', gameInProgress, 'gameStatus', gameStatus);\n    // const playEnabled = true;\n\n\n    // const loadingMessage = 'You played ...';\n    // const loadingMessage = gameStatus;\n    const loadingMessage = gameStatus === gameStatuses.GAME_ENDED && winner > 0 ?\n      myWins > opponentWins ?\n        'You Won!' :\n        'You lost.' :\n      gameStatus;\n\n    // const loadingMessageClass = '\n    // const loadingMessageStyle = { textAlign: 'center', marginTop: '1em', size: '22px' };\n    // const { loading, file } = this.state;\n    // const playInProgress = !playEnabled;\n    // playInProgress = false;\n    // const loading = playInProgress;\n    // const spinnerProps = {\n    //   // loadingMessage,\n    //   loadingMessageStyle,\n    //   loading,\n    //   className: 'loading-viewer',\n    //   // delay: 500,\n    //   // fadeIn: true,\n    //   id: \"loading-spinner\",\n    // };\n    // console.log('spinnerProps', spinnerProps);\n\n\n    const activeCardBody = (\n      <CardBody className=\"\">\n        <Row>\n          <Col className=\"text-right\">Round Number:</Col>\n          <Col className=\"text-left\">{round}</Col>\n        </Row>\n\n        <Row>\n          <Col className=\"text-right\">Your Opponent:</Col>\n          <Col className=\"text-left\">{opponentName}</Col>\n        </Row>\n        <Row>\n          <Col className=\"text-right\">Your Wins:</Col>\n          <Col className=\"text-left\">{myWins}</Col>\n        </Row>\n        <Row>\n          <Col className=\"text-right\">Opponent Wins:</Col>\n          <Col className=\"text-left\">{opponentWins}</Col>\n        </Row>\n        <Row className=\"mb-2\">\n          <Col className=\"text-right\">Ties:</Col>\n          <Col className=\"text-left\">{ties}</Col>\n        </Row>\n\n        {/* { playInProgress ? <LoadingSpinner {...spinnerProps} /> : */}\n        {/*     <>                                                    */}\n        <Button color=\"primary\" className=\"mr-2 game-action\" onClick={this.play} value=\"rock\" disabled={!playEnabled}> Rock </Button>\n        <Button color=\"primary\" className=\"mr-2 game-action\" onClick={this.play} value=\"paper\" disabled={!playEnabled}> Paper </Button>\n        <Button color=\"primary\" className=\"mr-2 game-action\" onClick={this.play} value=\"scissors\" disabled={!playEnabled}> Scissors </Button>\n        <br />\n        <br />\n        {/*     </> */}\n        {/* }       */}\n        <Button color=\"danger\" onClick={this.endCurrentGame} id=\"end-game\">End Match</Button>\n      </CardBody>\n    );\n    // return <LoadingSpinner loading/>\n\n\n    return (\n      <Card className=\"border-success game\" style={{ display: \"block\" }} >\n        <CardHeader className=\"text-white bg-success bg\">\n          Your Active Game\n        </CardHeader>\n        {/* {playInProgress ? <LoadingSpinner {...spinnerProps} /> : activeCardBody} */}\n        {activeCardBody}\n        <CardFooter><CardText>{loadingMessage}</CardText></CardFooter>\n      </Card>\n    );\n  }\n}\n\n\nfunction mapStateToProps({ auth, gathering, game }) {\n  const onlinePlayers = gathering != null ? gathering.onlinePlayers || [] : [];\n  return {\n    user: auth,\n    gathering,\n    players: onlinePlayers,\n    game,\n    gameUID: game.gameKey,\n  };\n}\n\n\nexport default connect(mapStateToProps, { endGame, makePlay, getRoundOutcome, changePlayerStatus })(Game);\n","// import firebase, { authRef, provider, } from '../firebase';\n// import firebase, { provider, } from '../firebase';\nimport firebase, { googleProvider, } from '../firebase';\n// import { authRef, provider, } from '../firebase';\nimport { leaveGathering } from './gatheringActions';\n// import { FETCH_USER } from './types';\nimport { userActions, modalActions } from './types';\n// const auuthRef = firebase.auth();\n\nexport const fetchUser = () => dispatch => firebase.auth().onAuthStateChanged(user => {\n  // This function is not an action or action creator, but just creates a firebase listener, which when fired dispatches actions.\n  // I would like to decouple the creation of the listener from the action creators.\n  console.log('onAuthStateChanged triggered from fetchUser');\n  if (user && user.displayName) {\n    dispatch({\n      type: userActions.FETCH_USER,\n      payload: user\n    });\n    dispatch({\n      type: modalActions.CLOSE_AUTHENTICATION_MODAL,\n      payload: {\n        loginError: undefined,\n      }\n    });\n  }\n  else {\n    dispatch({\n      type: userActions.FETCH_USER,\n      payload: null\n    });\n  }\n});\n\n// export const signIn = () => () => firebase.auth()\n// export const signIn = () => dispatch => {\n// export const signIn = () => () => authRef\nexport const signIn = () => dispatch => firebase.auth()\n  .signInWithPopup(googleProvider)\n  .then(result => {\n  // .then(() => {\n    console.log('singIn result', result);\n    // no need to dispatch auth signer, because then is done using the onAuthStateChanged event listener\n    dispatch({ type: userActions.SIGNIN_SUCCESSFUL });\n  })\n  .catch(error => {\n    dispatch({ type: userActions.SIGNIN_ERROR, payload: error });\n    console.log('signIn action error', error);\n  });\n\n\n// testable signOut function\n// handleSignOut() {\n//   if (firebase.auth().currentUser) {\n//     firebase.auth().signOut();\nexport const handleSignOut = () => dispatch => {\n// export const handleSignOut = () => {\n  // console.log('running handleSignOut action');\n  // console.log('authref', authRef.toString());\n  // Object.keys(authRef).forEach(key => console.log('authRef key:', key, 'value:', authRef[key] && authRef[key].toString()));\n  const authRef = firebase.auth();\n  // console.log('authref', authRef.toString());\n  // Object.keys(authRef).forEach(key => console.log('authRef key:', key, 'value:', authRef[key] && authRef[key].toString()));\n  // if (firebase.auth().currentUser) {\n  //   firebase.auth().signOut();\n  if (authRef.currentUser) {\n    authRef.signOut()\n      .then(() => {\n        // console.log('sign-out successful');\n        // return true;\n        // dispatch({ type: 'SIGNOUT_SUCCESSFUL' });\n        dispatch({ type: userActions.SIGNOUT_SUCCESSFUL });\n        return Promise.resolve(true);\n      })\n      .catch(error => {\n        // dispatch({ type: 'SIGNOUT_ERROR' });\n        // dispatch({ type: 'SIGNOUT_ERROR', payload: error });\n        dispatch({ type: userActions.SIGNOUT_ERROR, payload: error });\n        // console.log('signOut error', error);\n      });\n    return Promise.resolve(true);\n    // return true;\n  }\n  else {\n    // return false;\n    dispatch({ type: userActions.SIGNOUT_ERROR, payload: 'error on signout' });\n    return Promise.resolve(false);\n  }\n};\n\n\n// export const signOut = ({ auth: user, gathering }) => dispatch => {\nexport const signOut = ({ gathering }) => dispatch => {\n  // dispatch({ type: 'SIGNOUT_REQUEST' });\n  dispatch({ type: userActions.SIGNOUT_REQUEST });\n  // export const signOut = () => () => {\n  // console.log('received action request to signOut');\n  // console.log('gathering in signOut action', gathering);\n  // console.log('dispatch in signOut action', dispatch);\n  if (gathering && Object.keys(gathering).length > 0 && typeof gathering.leave === 'function') {\n    dispatch(leaveGathering(gathering));\n    // console.log('executed leaveGathering action, now signing out');\n  }\n  else {\n    console.log('not leaving gathering, because it does not appear to be defined');\n  }\n  \n  // return Promise.resolve(handleSignOut());\n  return dispatch(handleSignOut());\n};\n\nexport const registerUserAction = ({ username, email, password }) => dispatch => {\n  // console.log('in registerUser Action');\n  const authRef = firebase.auth();\n  // console.log('username', username, 'email', email, 'password', password);\n  dispatch({\n    type: userActions.EMAIL_PASSWORD_REGISTRATION_ATTEMPT,\n    // payload: { username, email, password },\n  });\n  return authRef.createUserWithEmailAndPassword(email, password)\n    .then(() => {\n    // .then((data) => {\n      // console.log('registerUserAction data', data);\n      dispatch({\n        type: userActions.EMAIL_PASSWORD_REGISTRATION_SUCCESS,\n        // payload: { username, email, password },\n      });\n      // also update user profile in firebase with username\n      const authUser = authRef.currentUser;\n      authUser.updateProfile({\n        uid: authUser.uid,\n        displayName: username,\n      }).then(() => {\n        // console.log('updateProfile result', result)\n        setTimeout(() => dispatch({\n          type: modalActions.CLOSE_AUTHENTICATION_MODAL,\n          payload: {\n            registrationError: undefined,\n          }\n        }), 2000);\n        dispatch({\n          type: userActions.FETCH_USER,\n          payload: firebase.auth().currentUser\n        });\n        dispatch({\n          type: modalActions.MODAL_MESSAGE,\n          payload: {\n            registrationError: false,\n            message: \"Registration was successful!\",\n          }\n        });\n      });\n      // });\n    })\n    .catch(err => {\n      // console.log('error on registerUserAction', err);\n      // dispatch({\n      //   type: userActions.EMAIL_PASSWORD_REGISTRATION_FAIL,\n      //   payload: { message: err.message },\n      //   // payload: { username, email, password },\n      // });\n      dispatch({\n        type: modalActions.MODAL_MESSAGE,\n        payload: {\n          registrationError: true,\n          message: err.message,\n        }\n      });\n    });\n};\n\nexport const loginUserWithEmailPassword = ({ email, password }) => dispatch => {\n  // console.log('in loginUserWithEmailPassword');\n  const authRef = firebase.auth();\n  dispatch({\n    type: userActions.EMAIL_PASSWORD_LOGIN_ATTEMPT,\n  });\n  return authRef.signInWithEmailAndPassword(email, password)\n    // .then((data) => {\n    .then(() => {\n      // console.log('login data', data);\n      dispatch({\n        type: userActions.EMAIL_PASSWORD_LOGIN_SUCCESS,\n      });\n      dispatch({\n        type: modalActions.MODAL_MESSAGE,\n        payload: {\n          loginError: false,\n          message: 'Login was successful!',\n        }\n      });\n      setTimeout(() => dispatch({\n        type: modalActions.CLOSE_AUTHENTICATION_MODAL,\n        payload: {\n          loginError: undefined,\n        }\n      }), 1600);\n    })\n    .catch((err) => {\n      // console.log('error on loginUserWithEmailPassword', err);\n      // console.log(err);\n      // dispatch({\n      //   type: userActions.EMAIL_PASSWORD_LOGIN_FAIL,\n      //   // payload: err,\n      //   payload: { message: err.message },\n      // });\n      dispatch({\n        type: modalActions.MODAL_MESSAGE,\n        payload: {\n          loginError: true,\n          message: err.message,\n        }\n      });\n      // console.log('dispatched userActions.EMAIL_PASSWORD_LOGIN_FAIL in loginUserWithEmailPassword', userActions.EMAIL_PASSWORD_LOGIN_FAIL);\n    });\n\n  // return dispatch({\n  //   type: 'LOGIN_USER_FAKE',\n  //   payload: { email, password },\n  // });\n};\n","import {\n  modalActions,\n} from './types';\n\n\nexport const openAuthenticationModal = () => dispatch => {\n  // console.log('running openAuthenticationModal action');\n  dispatch({\n    type: modalActions.OPEN_AUTHENTICATION_MODAL,\n  });\n};\n\nexport const closeAuthenticationModal = () => dispatch => {\n  return dispatch({\n    type: modalActions.CLOSE_AUTHENTICATION_MODAL,\n  });\n};\n\nexport const toggleAuthenticationModal = () => dispatch => {\n  // console.log('in toggleAuthenticationModal action');\n  return dispatch({\n    type: modalActions.TOGGLE_AUTHENTICATION_MODAL,\n  });\n};\n\n","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Avatar from 'react-avatar';\n\n// import { signIn, signOut } from '../actions/user'; \nimport { signOut } from '../actions/user'; \nimport { toggleAuthenticationModal } from '../actions/modalActions';\n\n\nimport rpsLogo from '../rpsLogo.png';\n// import userImage from '../img/user.png';\n\nclass AppNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    // const { user, login, logout } = this.props;\n    const { props } = this;\n    // const { auth, signIn: userSignIn, signOut: userSignOut } = this.props;\n    // const { auth, signIn: userSignIn, signOut: signOutAction, gathering, toggleAuthenticationModal: toggleModal } = this.props; \n    const { auth, signOut: signOutAction, gathering, toggleAuthenticationModal: toggleModal } = this.props;\n    // console.log('gathering in Navbar component:', gathering);\n    // const userSignOut = () => signOutAction(gathering);\n    const userSignOut = () => signOutAction({ auth, gathering });\n    // const userSignOut = () => signOutAction(gathering);\n    // const avatar = <Avatar name={auth ? auth.displayName : \"xena\"} unstyled=\"true\" />;\n    // console.log('auth', auth);\n\n    const userMenu = auth ? (\n      <UncontrolledDropdown nav className=\"\" inNavbar>\n        <DropdownToggle nav caret>\n\n          {/* <img src=\"https://getbootstrap.com/docs/4.1/assets/brand/bootstrap-solid.svg\" width=\"30\" height=\"30\" alt=\"\" /> */}\n          {/* <img src={auth.photoURL } width=\"40\" height=\"40\" alt={auth.displayName} /> */}\n          { auth.photoURL ?\n            <Avatar src={auth.photoURL} alt={auth.displayName} className=\"\" size=\"25\" /> :\n            <Avatar name={auth.displayName} color={Avatar.getRandomColor('sitebase', ['green'])} className=\"\" size=\"25\" />\n          }\n        </DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem onClick={userSignOut}>Log Out {auth.displayName}\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem disabled>\n            Option 2\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem disabled>\n            Reset\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    ) : (\n      <NavItem>\n        {/* <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink> */}\n        {props.auth ?\n          <Button outline onClick={userSignOut}>Log Out {auth.displayName}</Button>\n          :\n          <Button outline onClick={toggleModal}>Log In/Sign Up</Button>\n        }\n      </NavItem>\n    );\n\n    return (\n      // <Navbar color=\"dark\" light expand=\"md\" user={user} dark>\n      <Navbar color=\"dark\" light expand=\"md\" dark >\n        <NavbarBrand href=\"/\">\n          <img src={rpsLogo} height=\"45\" alt=\"Rock Paper Scissors\" />\n        </NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem className=\"ml-auto\" >\n              <NavLink target=\"_blank\" href=\"https://github.com/semlak/rock-paper-scissors-firebase-react-redux/\">Github</NavLink>\n            </NavItem>\n            <NavItem className=\"ml-auto\" >\n              <Nav>\n                {userMenu}\n              </Nav>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\n// function mapStateToProps({ auth }) {\n//   return { auth };\n// }\n\n\n// AppNavbar.defaultProps = {\n//   auth: {},\n// };\n\n\nfunction mapStateToProps({ auth, gathering }) {\n  return { auth, gathering };\n}\n\n\nAppNavbar.defaultProps = {\n  auth: {},\n};\n\nAppNavbar.propTypes = {\n  auth: PropTypes.shape({\n    displayName: PropTypes.string,\n    uid: PropTypes.string,\n    photoURL: PropTypes.string,\n  }),\n  // signIn: PropTypes.func.isRequired,\n  toggleAuthenticationModal: PropTypes.func.isRequired,\n  signOut: PropTypes.func.isRequired,\n};\n\n// export default connect(mapStateToProps, { signIn, signOut, toggleAuthenticationModal })(AppNavbar);\nexport default connect(mapStateToProps, { signOut, toggleAuthenticationModal })(AppNavbar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport default function(ComposedComponent) {\n  class Authentication extends Component {\n    static contextTypes = {\n      router: PropTypes.object\n     };\n\n    componentWillMount() {\n      if (this.props.auth === null) {\n        this.context.router.history.push(\"/\");\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      // console.log('in componentWillUpdate, nextProps:', nextProps);\n      if (!nextProps.auth) {\n        // console.log('not authenticated');\n        this.context.router.history.push('/');\n      }\n      else {\n        // console.log('user is authenticated');\n      }\n    }\n\n    render() {\n      // console.log('in requireAuth render, this.props', this.props);\n      if (this.props.auth) {\n        return <ComposedComponent {...this.props} />;\n      }\n      else {\n        return null;\n      }\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { auth: state.auth };\n  }\n\n  return connect(mapStateToProps)(Authentication);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { signIn } from '../actions/user';\nimport \"./SignIn.css\";\n\nimport defaultUserImage from '../img/user.png';\n\nclass Signin extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  componentWillUpdate(nextProps) {\n    // console.log('in componentWillUpdate for \\'SignIn\\', nextProps', nextProps);\n    if (nextProps.auth) {\n      this.context.router.history.push(\"/app\");\n    }\n  }\n\n  signIn(e) {\n    e.preventDefault();\n    this.props.signIn();\n  }\n\n  render() {\n    return (\n      <div className=\"row social-signin-container\">\n        <div className=\"col s10 offset-s1 center-align\">\n          {/* <img alt=\"Sign in\" id=\"sign-in\" src=\"/img/user.png\" /> */}\n          <img alt=\"Sign in\" id=\"sign-in\" src={defaultUserImage} />\n          <h4 id=\"sign-in-header\">Sign In to start</h4>\n          <a href=\"/#\" className=\"social-signin\" onClick={this.props.signIn}>\n            <i className=\"fa fa-google social-signin-icon\" />\n            Sign in with Google\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return { auth };\n}\n\nexport default connect(mapStateToProps, { signIn })(Signin);\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  // CardTitle,\n  // CardText,\n  // CardFooter,\n  // CardHeader,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport Avatar from 'react-avatar';\n\n// import defaultPlayerImage from '../img/user.png';\n\n// import { joinGathering } from '../actions/gatheringActions';\nimport {\n  changePlayerStatus,\n} from '../actions/gatheringActions';\n\n\nconst PlayerAvatar = ({ player }) => (\n  player.photoURL && player.photoURL.length > 0 ?\n    <img src={player.photoURL} height=\"25\" alt={player.displayName} /> :\n    <Avatar name={player.displayName} color={Avatar.getRandomColor('sitebase', ['green'])} size=\"25\" textSizeRatio={2} />\n);\n\n// const UserList = (props) => {\nclass UserList extends Component {\n  componentDidMount() {\n    this.updatePlayerStatusIfNeccessary();\n    // console.log('in componentDidMount');\n    // const { auth: user, gathering, } = this.props;\n    // const inGame = false;\n    // const player = this.props.players.find(player1 => player1.uid === user.uid);\n    // // console.log('player', player);\n    // if (player && player.inGame !== inGame) {\n    //   const player1 = { ...player, inGame };\n    //   // console.log('going to updatePlayerStatus, player1', player1);\n    //   this.props.changePlayerStatus(player1, gathering);\n    // }\n  }\n\n  componentDidUpdate() {\n    this.updatePlayerStatusIfNeccessary();\n    // console.log('in componentDidUpdate');\n    // const { auth: user, gathering, } = this.props;\n    // const inGame = false;\n    // const player = this.props.players.find(player1 => player1.uid === user.uid);\n    // // console.log('player', player);\n    // if (player && player.inGame !== inGame) {\n    //   const player1 = { ...player, inGame };\n    //   // console.log('going to updatePlayerStatus, player1', player1);\n    //   this.props.changePlayerStatus(player1, gathering);\n    // }\n  }\n\n  updatePlayerStatusIfNeccessary() {\n    const { auth: user, gathering, } = this.props;\n    const inGame = false;\n    const player = this.props.players.find(player1 => player1.uid === user.uid);\n    // console.log('player', player);\n    if (player && player.inGame !== inGame) {\n      const player1 = { ...player, inGame };\n      // console.log('going to updatePlayerStatus, player1', player1);\n      this.props.changePlayerStatus(player1, gathering);\n    }\n  }\n\n\n  render() {\n    // const { selectPlayer } = props;\n    const { props } = this;\n    const { selectPlayer, auth } = props;\n    const players = props.players && Array.isArray(props.players) ? props.players : [];\n\n    // console.log('players', players, 'props', props);\n\n    return (\n      <Card className=\"border-info app\" id=\"available-players\" style={{ display: \"block\" }} >\n        {/* <CardHeader className=\"text-white bg-info\">\n          Other Available Users\n        </CardHeader> */}\n        <CardBody className=\"\">\n          { players.length < 1 ? 'Loading players...' : players.map(player => (\n            <Button\n              key={player.uid}\n              onClick={() => selectPlayer(player.uid)}\n              color=\"primary\"\n              className=\"mr-1 mb-1\"\n              outline\n              disabled={player.uid === auth.uid || player.inGame}\n              title={`${player.displayName}${player.inGame ? ' is currently in a game' : ''}`}\n            >{ player.uid === auth.uid ? `You (${player.displayName})` : player.displayName} <span> <PlayerAvatar player={player} /></span>\n            </Button>\n          ))}\n        </CardBody>\n        {/* <CardFooter className=\"card-footer\">Select a user to play!</CardFooter> */}\n      </Card>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth, gathering }) {\n  const onlinePlayers = gathering != null ? gathering.onlinePlayers || [] : [];\n  return { auth, gathering, players: onlinePlayers, };\n}\n\n// export default connect(mapStateToProps, { joinGathering })(UserList);\nexport default connect(mapStateToProps, { changePlayerStatus })(UserList);\n","import React from 'react';\nimport {\n  Modal,\n  // ModalHeader,\n  ModalBody,\n  // ModalFooter,\n  Button,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { signIn, } from '../actions/user';\nimport { toggleAuthenticationModal } from '../actions/modalActions';\nimport { LoginForm, RegistrationForm } from '../components';\n\nclass AuthenticationModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // this.toggle = this.toggle.bind(this);\n    this.toggleTab = this.toggleTab.bind(this);\n    this.state = {\n      // isOpen: false,\n      activeTab: '1',\n    };\n  }\n  // toggle() {\n  //   this.setState({\n  //     isOpen: !this.state.isOpen\n  //   });\n  // }\n\n  toggleTab(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    // const { user, login, logout } = this.props;\n    // const { props } = this;\n    // const { auth, signIn: userSignIn, signOut: userSignOut } = this.props;\n    // const { auth, signIn: googleSignIn, signOut: signOutAction, gathering } = this.props;\n    console.log('rendingering AuthenticationModal, props:', this.props);\n    const { signIn: googleSignIn, authenticationModalOpen: isOpen, toggleAuthenticationModal: toggle } = this.props;\n    // const userSignOut = () => signOutAction(gathering);\n    // const userSignOut = () => signOutAction({ auth, gathering });\n    // const userSignOut = () => signOutAction(gathering);\n    // console.log('auth', auth);\n    \n\n    return (\n      <Modal isOpen={isOpen} toggle={toggle} size=\"lg\" className={this.props.className}>\n        <ModalBody>\n          <div className=\"row\">\n            <div className=\"col-lg-8 col-md-12 add-right-border\">\n              {/* <!-- Nav tabs --> */}\n              {/* <!-- modified from https://bootsnipp.com/snippets/VElzQ --> */}\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={this.state.activeTab === '1' ? 'active' : ''}\n                    onClick={() => { this.toggleTab('1'); }}\n                  >\n                    Login\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={this.state.activeTab === '2' ? 'active' : ''}\n                    onClick={() => { this.toggleTab('2'); }}\n                  >\n                    Registration\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <TabContent activeTab={this.state.activeTab} className=\"mt-2\" id=\"nav-tab-content\">\n                <TabPane tabId=\"1\">\n                  <LoginForm closeButtonAction={toggle} />\n                </TabPane>\n                <TabPane tabId=\"2\">\n                  <RegistrationForm closeButtonAction={toggle} />\n                </TabPane>\n              </TabContent>\n              {/* <!-- Sign in with Google of Github--> */}\n              <div id=\"OR\" className=\"\">OR</div>\n            </div>\n            <div className=\"hidden-lg-down col-sm-12 col-md-12 col-lg-4\">\n              <div className=\"row text-center sign-with\">\n                <div className=\"col-md-12\">\n                  <h5>Sign in with</h5>\n                </div>\n                <div className=\"col-md-12\">\n                  <div className=\"btn-group btn-group-justified\">\n                    <Button id=\"github-signin\">Github</Button>\n                    <Button color=\"danger\" id=\"google-signin\" onClick={googleSignIn}>Google</Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\n// function mapStateToProps({ auth }) {\n//   return { auth };\n// }\n\n\n// AppNavbar.defaultProps = {\n//   auth: {},\n// };\n\n\nfunction mapStateToProps({ modals }) {\n  const { authenticationModalOpen } = modals;\n  return { authenticationModalOpen };\n}\n\n\nAuthenticationModal.defaultProps = {\n};\n\nAuthenticationModal.propTypes = {\n  // auth: PropTypes.shape({\n  //   displayName: PropTypes.string,\n  //   uid: PropTypes.string,\n  //   photoURL: PropTypes.string,\n  // }),\n  signIn: PropTypes.func.isRequired,\n  // signOut: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, { signIn, toggleAuthenticationModal })(AuthenticationModal);\n","import React from 'react';\nimport {\n  // ModalHeader,\n  // ModalFooter,\n  Button,\n  // Container,\n  Row,\n  Col,\n  Input,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { loginUserWithEmailPassword, } from '../actions/user';\n\n\nclass AuthenticationModal extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      email: '',\n      password: '',\n      // formValid: false,\n      // formInvalid: false,\n    };\n  }\n\n  handleInputChange = event => this.setState({ [event.target.name]: event.target.value });\n\n  handleLoginClick = event => {\n    event.preventDefault();\n    // const { registerUser } = this.props;\n    console.log('in handleRegisterClick');\n    // const { props } = this;\n    const { email, password, } = this.state;\n    if (password.length >= 6) {\n      this.props.loginUserWithEmailPassword({ email, password });\n    }\n    else {\n      console.error('password needs to be at least 6 characters');\n    }\n  }\n\n  render() {\n    // const { user, login, logout } = this.props;\n    // const { props } = this;\n    // const { auth, signIn: userSignIn, signOut: userSignOut } = this.props;\n    // const { auth, signIn: googleSignIn, signOut: signOutAction, gathering } = this.props;\n    const { email, password } = this.state;\n    // console.log('gathering in Navbar component:', gathering);\n    // const userSignOut = () => signOutAction(gathering);\n    // const userSignOut = () => signOutAction({ auth, gathering });\n    // const userSignOut = () => signOutAction(gathering);\n    // console.log('auth', auth);\n    const { handleInputChange } = this;\n    console.log('this.props', this.props);\n    const { loginError: modalError, message } = this.props.modals;\n    const valid = !modalError && typeof modalError !== 'undefined' ? true : undefined;\n    const invalid = !!modalError && typeof modalError !== 'undefined' ? true : undefined;\n    // console.log('invalid:', invalid);\n\n    return (\n      <Form >\n        <FormGroup row >\n          <Label for=\"email\" sm={3} >Email</Label>\n          <Col sm={9}>\n            <Input valid={valid} invalid={invalid} type=\"email\" name=\"email\" value={email} placeholder=\"Email\" onChange={handleInputChange} />\n          </Col>\n        </FormGroup>\n        <FormGroup row >\n          <Label for=\"password\" sm={3} >Password</Label>\n          <Col sm={9}>\n            <Input valid={valid} invalid={invalid} type=\"password\" name=\"password\" value={password} placeholder=\"password\" onChange={handleInputChange} />\n            <FormFeedback valid={valid} invalid={typeof invalid !== 'undefined' ? 'false' : undefined} >{message}</FormFeedback>\n          </Col>\n          {/* <FormFeedback valid={modalError}>Logging in. Please wait...</FormFeedback> */}\n        </FormGroup>\n        <Row>\n          <Col sm={{ size: 9, offset: 3 }} >\n            <Button color=\"primary\" onClick={this.handleLoginClick}>Submit</Button>\n            <Button color=\"danger\" onClick={this.props.closeButtonAction} className=\"ml-2\" data-dismiss=\"modal\">Cancel</Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\n// function mapStateToProps({ auth }) {\n//   return { auth };\n// }\n\n\n// AppNavbar.defaultProps = {\n//   auth: {},\n// };\n\n\nfunction mapStateToProps({ auth, gathering, modals }) {\n  return { auth, gathering, modals };\n}\n\n\nAuthenticationModal.defaultProps = {\n  // auth: {},\n};\n\nAuthenticationModal.propTypes = {\n  // auth: PropTypes.shape({\n  //   displayName: PropTypes.string,\n  //   uid: PropTypes.string,\n  //   photoURL: PropTypes.string,\n  // }),\n  closeButtonAction: PropTypes.func.isRequired,\n  loginUserWithEmailPassword: PropTypes.func.isRequired,\n  // signOut: PropTypes.func.isRequired,\n};\n\n// export default connect(mapStateToProps, { signIn, signOut })(AuthenticationModal);\nexport default connect(mapStateToProps, { loginUserWithEmailPassword, })(AuthenticationModal);\n","import React from 'react';\nimport {\n  // ModalHeader,\n  // ModalFooter,\n  Button,\n  // Container,\n  Row,\n  Col,\n  Input,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// import { signIn, signOut } from '../actions/user';\nimport { registerUserAction } from '../actions/user';\n\n\nconst validateEmail = email => !!email.match(\"[a-zA-Z]+.*@.*[a-zA-Z]+.*[.][a-zA-Z]+\");\n\nclass AuthenticationModal extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      // formValid: false,\n      // formInvalid: false,\n    };\n  }\n\n  handleInputChange = event => this.setState({ [event.target.name]: event.target.value });\n\n  handleRegisterClick = event => {\n    event.preventDefault();\n    // const { registerUserAction } = this.props;\n    console.log('in handleRegisterClick');\n    // const { props } = this;\n    const { username, email, password, passwordConfirm } = this.state;\n    // if (username.length > 0 && validateEmail(email) && password.length >= 6 && password === passwordConfirm) {\n    //   return this.props.registerUserAction({ username, email, password });\n    // }\n    if (username.length < 1) {\n      return console.error('need valid username');\n    }\n    if (!validateEmail(email)) {\n      return console.error('need valid email');\n    }\n    if (password.length < 6) {\n      return console.error('need password of length 6 or more characters');\n    }\n    if (password !== passwordConfirm) {\n      return console.error('password and confirmation did not match');\n    }\n    console.log('data is valid. Registering user');\n    return this.props.registerUserAction({ username, email, password });\n  }\n\n  render() {\n    // const { user, login, logout } = this.props;\n    // const { props } = this;\n    // const { auth, signIn: userSignIn, signOut: userSignOut } = this.props;\n    // const { auth, signIn: googleSignIn, signOut: signOutAction, gathering } = this.props;\n    const { username, email, password, passwordConfirm } = this.state;\n    // console.log('gathering in Navbar component:', gathering);\n    // const userSignOut = () => signOutAction(gathering);\n    // const userSignOut = () => signOutAction({ auth, gathering });\n    // const userSignOut = () => signOutAction(gathering);\n    // console.log('auth', auth);\n    const { handleInputChange } = this;\n\n    console.log('this.props', this.props);\n    const { registrationError: modalError, message } = this.props.modals;\n    const valid = !modalError && typeof modalError !== 'undefined' ? true : undefined;\n    const invalid = !!modalError && typeof modalError !== 'undefined' ? true : undefined;\n\n    return (\n      <Form autoComplete=\"off\">\n        <FormGroup row >\n          <Label for=\"name\" sm={3} className=\"pr-0\" >Display Name</Label>\n          <Col sm={9}>\n            <Input valid={valid} invalid={invalid} type=\"text\" name=\"username\" value={username} placeholder=\"Display Name\" onChange={handleInputChange} />\n            {/* <FormFeedback>Please choose a display name.</FormFeedback> */}\n          </Col>\n        </FormGroup>\n        <FormGroup row >\n          <Label for=\"email\" sm={3} >Email</Label>\n          <Col sm={9}>\n            <Input valid={valid} invalid={invalid} type=\"email\" name=\"email\" value={email} placeholder=\"Email\" onChange={handleInputChange} />\n            {/* <FormFeedback>Please use a valid-looking email.</FormFeedback> */}\n          </Col>\n        </FormGroup>\n        <FormGroup row >\n          <Label for=\"password\" sm={3} >Password</Label>\n          <Col sm={9}>\n            <Input valid={valid} invalid={invalid} type=\"password\" name=\"password\" value={password} placeholder=\"Password (6-character minimum)\" onChange={handleInputChange} autoComplete=\"off\" />\n            {/* <FormFeedback>Please choose a password of at least 6 characters.</FormFeedback> */}\n          </Col>\n        </FormGroup>\n        <FormGroup row >\n          <Label for=\"passwordConfirm\" sm={3} >Confirm</Label>\n          <Col sm={9}>\n            <Input valid={valid} invalid={invalid} type=\"password\" name=\"passwordConfirm\" value={passwordConfirm} placeholder=\"Confirm Password\" onChange={handleInputChange} />\n            {/* <FormFeedback>Password and Password Confirmation must match.</FormFeedback> */}\n            <FormFeedback valid={valid} invalid={typeof invalid !== 'undefined' ? 'false' : undefined} >{message}</FormFeedback>\n          </Col>\n        </FormGroup>\n        <Row>\n          <Col sm={{ size: 9, offset: 3 }} >\n            <Button color=\"primary\" onClick={this.handleRegisterClick}>Register</Button>\n            <Button color=\"danger\" onClick={this.props.closeButtonAction} className=\"ml-2\" data-dismiss=\"modal\">Cancel</Button>\n          </Col>\n        </Row> \n      </Form>\n    );\n  }\n}\n\n// function mapStateToProps({ auth }) {\n//   return { auth };\n// }\n\n\n// AppNavbar.defaultProps = {\n//   auth: {},\n// };\n\n\n// function mapStateToProps({ auth, gathering }) {\n//   return { auth, gathering };\n// }\n\nfunction mapStateToProps({ modals }) {\n  return { modals };\n}\n\n// AuthenticationModal.defaultProps = {\n//   auth: {},\n// };\n\nAuthenticationModal.propTypes = {\n  // auth: PropTypes.shape({\n  //   displayName: PropTypes.string,\n  //   uid: PropTypes.string,\n  //   photoURL: PropTypes.string,\n  // }),\n  closeButtonAction: PropTypes.func.isRequired,\n  registerUserAction: PropTypes.func.isRequired,\n  // signOut: PropTypes.func.isRequired,\n};\n\n// export default connect(mapStateToProps, { signIn, signOut })(AuthenticationModal);\nexport default connect(mapStateToProps, { registerUserAction, })(AuthenticationModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// import { signIn } from '../actions/user';\nimport { toggleAuthenticationModal } from '../actions/modalActions';\nimport \"./SignIn.css\";\n\n// import defaultUserImage from '../img/user.png';\nimport landingImage from '../img/landing-rps.jpg';\n\nclass Landing extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  componentWillUpdate(nextProps) {\n    // console.log('in componentWillUpdate for \\'SignIn\\', nextProps', nextProps);\n    if (nextProps.auth) {\n      this.context.router.history.push(\"/app\");\n    }\n  }\n\n  signIn(e) {\n    e.preventDefault();\n    this.props.signIn();\n  }\n\n  toggleModal = (e) => {\n    console.log('toggleModal');\n    e.preventDefault();\n    this.props.toggleAuthenticationModal();\n  }\n\n  render() {\n    return (\n      <div className=\"row social-signin-container\">\n        <div className=\"col s10 offset-s1 center-align\">\n          {/* <img alt=\"Sign in\" id=\"sign-in\" src=\"/img/user.png\" /> */}\n          <img alt=\"Sign in\" id=\"sign-in\" src={landingImage} />\n          <br />\n          <br />\n          <br />\n          <br />\n          {/* <h4 id=\"sign-in-header\">Sign In to start</h4> */}\n          <a href=\"/#\" className=\"social-signin\" onClick={this.toggleModal}>\n            <i className=\"fa fa-google social-signin-icon\" />\n            Sign in to start\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return { auth };\n}\n\nexport default connect(mapStateToProps, { toggleAuthenticationModal })(Landing);\n","import React, { Component } from 'react';\nimport {\n  // Button,\n  // Card,\n  CardBody,\n  // CardTitle,\n  // CardText,\n  CardFooter,\n  CardHeader,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\n\nimport { joinGathering, } from '../actions/gatheringActions';\nimport { requestGame } from '../actions/game';\nimport { PlayerList, Game } from '../components';\n\nclass Main extends Component {\n  // const { users, selectUser } = props;\n  state = {\n  };\n\n  // counter = 0;\n\n  componentDidMount() {\n    const { props: nextProps } = this;\n    // console.log('in componentWillUpdate for \\'Main\\', nextProps', nextProps);\n    if (nextProps.auth && !(nextProps.gathering && Object.keys(nextProps.gathering).length > 0)) {\n      // console.log('sending joinGathering request');\n      this.props.joinGathering(nextProps.auth);\n      // this.context.router.history.push(\"/app\");\n    }\n    else {\n      // console.log('not joining gathering');\n    }\n  }\n\n\n  selectPlayer = (uid) => {\n    const { auth: user, players } = this.props;\n    // console.log('creating action request for user, who selected to play against player uid', uid);\n    return this.props.requestGame(user, players.find(player => player.uid === uid));\n  }\n\n\n  render() {\n    const { appStatus, appHeaderText, game } = this.props;\n    const players = this.props.players && Array.isArray(this.props.players) ? this.props.players : [];\n    // console.log('rendering main');\n\n    // console.log('players', players, 'this.props', this.props);\n    return (\n      <div id=\"main\" style={{ display: \"block\" }} >\n        {/* <Card className=\"border-info \" id=\"main\" style={{ display: \"block\" }} > */}\n        {/* <CardHeader className=\"text-white bg-info\">{appHeaderText || ' '}</CardHeader> */}\n        <CardBody className=\"\">\n          { game && Object.keys(game).length > 1 && game.gameKey && game.gameKey.length > 1 ?\n            <Game gameUID={game.key} /> :\n            !players || players.length < 0 ? <div>Loading</div> : <PlayerList players=\"players\" selectPlayer={this.selectPlayer} /> }\n        </CardBody>\n        {/* <CardFooter className=\"card-footer\">{appStatus || ' '}</CardFooter> */}\n        {/* </Card> */}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth, gathering, game }) {\n  const onlinePlayers = gathering != null ? gathering.onlinePlayers || [] : [];\n  return {\n    auth,\n    gathering,\n    players: onlinePlayers,\n    game\n  };\n}\n\nexport default connect(mapStateToProps, { joinGathering, requestGame })(Main);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './App.css';\nimport Main from './pages/Main';\n// import { Navbar, SignIn, requireAuth, AuthenticationModal } from './components';\nimport { Navbar, Landing, requireAuth, AuthenticationModal } from './components';\n\nimport { fetchUser } from './actions/user';\n\nexport class UnconnectedApp extends Component {\n  componentDidMount = () => {\n    // this.props.fetchUser && typeof this.props.fetchUser === 'function' && this.props.fetchUser();\n    this.props.fetchUser();\n  }\n\n  render() {\n    console.log('rendering App component');\n    console.log(`Your process.env.PUBLIC_URL: '${process.env.PUBLIC_URL}'`);\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Navbar />\n          <AuthenticationModal />\n          <div className=\"container main\">\n            {/* <Route exact path=\"/\" component={SignIn} /> */}\n            <Route exact path=\"/\" component={Landing} />\n            <Route path=\"/app\" component={requireAuth(Main)} />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\n// export default App;\nexport default connect(null, { fetchUser })(UnconnectedApp);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport reducers from './reducers';\nimport './index.css';\nimport App from './App';\n\n// import * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(<Provider store={store}> <App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/rpsLogo.94b40bc8.png\";","module.exports = __webpack_public_path__ + \"static/media/user.160c68fc.png\";","module.exports = __webpack_public_path__ + \"static/media/landing-rps.7015b724.jpg\";"],"sourceRoot":""}