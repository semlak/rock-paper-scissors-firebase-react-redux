{"version":3,"sources":["img/landing-rps.jpg","rpsLogo.png","actions/types.js","gameStatuses.js","reducers/chatReducer.js","reducers/index.js","reducers/authReducer.js","reducers/gatheringReducer.js","reducers/gameReducer.js","reducers/modalsReducer.js","config/firebase.js","firebase.js","gathering.js","actions/game.js","actions/gatheringActions.js","components/Game.js","components/Navbar.js","components/requireAuth.js","components/PlayerList.js","actions/user.js","actions/modalActions.js","components/AuthenticationModal.js","components/RegistrationForm.js","components/LoginForm.js","components/Landing.js","actions/chatActions.js","components/Chat.js","pages/Main.js","containers/NavbarContainer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","userActions","gatheringActions","gameActions","GAME_REQUESTED","GAME_CREATED","GAME_STARTED","GAME_ENDED","MAKE_PLAY","PLAY_IN_PROGRESS","PLAY_RECEIVED","ROUND_OUTCOME","GAME_UPDATE","GAME_IN_PROGRESS","modalActions","chatActions","gameStatus","NO_GAME","WAITING_FOR_BOTH_PLAYERS","PLAY_MADE_WAITING_FOR_OPPONENT","OPPONENT_PLAY_WAITING_FOR_USER","DETERMINING_ROUND_WINNER","defaultState","messages","userStatus","isTyping","opponentStatus","sendingMessage","combineReducers","auth","state","arguments","length","undefined","action","type","payload","gathering","Object","objectSpread","onlinePlayers","game","gameStatuses","keys","indexOf","gameKey","gameData","myUid","opponentUid","player2","actionPayload","newGameStatus","playerPlay","playerAction","getGameStateAfterPlayMade","_state$gameData","player1Uid","player1","player2Uid","round","gameInProgress","player1or2","player","playerUid","key","concat","playerActions","defineProperty","player1Actions","player2Actions","getGameStateAfterPlayReceived","_action$payload","player1Wins","player2Wins","maxNumberOfGames","newRound","Math","abs","modals","authenticationModalOpen","chat","message","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","refs","googleProvider","GoogleAuthProvider","githubProvider","GithubAuthProvider","Gathering","randomName","random","toString","replace","substr","databaseReference","roomName","this","db","room","ref","encodeURIComponent","myName","user","updateStatus","uid","data","presenceRef","self","on","snap","val","onDisconnect","remove","set","join","displayName","_this","Promise","resolve","reject","console","log","child","push","leave","over","onUpdated","callback","numChildren","error","GamesRef","database","GamesRefChild","childRef","createPlayerActionListener","gameRef","dispatch","refString","snapshot","plays","map","newGameListenerEvent","snapshotKey","snapshotVal","gameClosed","opponent","once","createRoundUpdateListener","gameData1","gameUID","createEndGameListener","changePlayerStatus","Game","play","e","target","value","_this$props$game$game","props","player1UID","player2UID","myUID","match","makePlay","endCurrentGame","endGame","render","_messages","_this$getState","getState","opponentName","myWins","opponentWins","ties","winner","_this$props$game$game2","playEnabled","loadingMessage","activeCardBody","react_default","a","createElement","reactstrap_es","className","xl","lg","md","sm","xs","color","onClick","disabled","id","_this$props","players","find","inGame","prevProps","_this$props$game","getRoundOutcome","_this$props$game$game3","player1Name","player2Name","name","wins","_ref","Component","connect","_ref3","then","catch","GameKey","gameValRef","err","Error","minNumberOfWins","ceil","values","player1Action","i","player2Action","reduce","acc","outcome","update","updateWithRoundOutcome","AppNavbar","signOutAction","signOut","toggleModal","toggleAuthenticationModal","userSignOut","userMenu","nav","inNavbar","caret","photoURL","react_avatar_es","src","alt","size","Avatar","getRandomColor","right","outline","light","expand","dark","href","logo","height","toggle","isOpen","navbar","defaultProps","requireAuth","ComposedComponent","Authentication","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","context","router","history","nextProps","contextTypes","PropTypes","object","PlayerAvatar","textSizeRatio","UserList","updatePlayerStatusIfNeccessary","selectPlayer","Array","isArray","style","display","title","PlayerList_PlayerAvatar","_ref2","signInMain","providerName","signInWithPopup","result","AuthenticationModal","call","activeTab","tab","setState","_this2","googleSignIn","signIn","githubSignIn","signInWithGithub","tabs","toggleTab","tabId","components_LoginForm","assign","closeButtonAction","components_RegistrationForm","React","loginUserWithEmailPassword","email","password","authRef","signInWithEmailAndPassword","loginError","registrationError","setTimeout","registerUserAction","username","createUserWithEmailAndPassword","authUser","currentUser","updateProfile","modalMessage","obj","validateEmail","RegistrationForm","handleInputChange","event","handleRegisterClick","preventDefault","_this$state","passwordConfirm","_this$state2","_this$props$modals","modalError","valid","invalid","autoComplete","row","for","placeholder","onChange","offset","data-dismiss","LoginForm","handleLoginClick","errorObj","loginPasswordError","loginPasswordMessage","loginUsernameError","loginUsernameMessage","validEmail","invalidEmail","validPass","invalidPass","loginPassswordMessage","Landing","_getPrototypeOf2","_len","args","_key","width","landingImage","body","sendMessage","Message","direction","text","timestamp","imgSrc","time","moment","format","getTimeFromStamp","date","getDateFromStamp","order","Chat_PlayerAvatar","Chat","stopTypingTimeout","resetStopTypingTimeout","assertThisInitialized","clearTimeout","userUID","userIsTyping","handleSend","bind","messageText","opponentUID","createChatUpdateListeners","playerUID","_this$props$chat","msgs","opponentIsTyping","m","sort","b","onSubmit","marginBottom","addonType","index_es","icon","faPaperPlane","aria-hidden","Chat_Message","_ref6","ServerValue","TIMESTAMP","sendMessageThroughFirebase","_ref8","_ref5","updateOpponentStatus","_ref7","sendStatusChange","_ref4","updatePlayerStatus","Main","requestGame","joinGathering","havePlayers","components_Game","src_components_Chat","PlayerList","count","otherPlayer","newGame","Navbar","rpsLogo","leaveGathering","App","componentDidMount","fetchUser","BrowserRouter","basename","process","NavbarContainer","components_AuthenticationModal","Route","exact","path","component","onAuthStateChanged","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4daac157.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing-rps.7015b724.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rpsLogo.94b40bc8.png\";","export const userActions = {\n  FETCH_USER: 'FETCH_USER',\n  SIGNIN_REQUEST: 'SIGNIN_REQUEST',\n  SIGNIN_SUCCESSFUL: 'SIGNIN_SUCCESSFUL',\n  SIGNIN_ERROR: 'SIGNIN_ERROR',\n  SIGNOUT_SUCCESSFUL: 'SIGNOUT_SUCCESSFUL',\n  SIGNOUT_REQUEST: 'SIGNOUT_REQUEST',\n  SIGNOUT_ERROR: 'SIGNOUT_ERROR',\n  REGISTER_USER: 'REGISTER_USER',\n  LOGIN_USER: 'LOGIN_USER',\n  EMAIL_PASSWORD_LOGIN_ATTEMPT: 'EMAIL_PASSWORD_LOGIN_ATTEMPT',\n  EMAIL_PASSWORD_LOGIN_SUCCESS: 'EMAIL_PASSWORD_LOGIN_SUCCESS',\n  EMAIL_PASSWORD_LOGIN_FAIL: 'EMAIL_PASSWORD_LOGIN_FAIL',\n  EMAIL_PASSWORD_REGISTRATION_ATTEMPT: 'EMAIL_PASSWORD_REGISTRATION_ATTEMPT',\n  EMAIL_PASSWORD_REGISTRATION_SUCCESS: 'EMAIL_PASSWORD_REGISTRATION_SUCCESS',\n  EMAIL_PASSWORD_REGISTRATION_FAIL: 'EMAIL_PASSWORD_REGISTRATION_FAIL',\n};\n\nexport const gatheringActions = {\n  FETCH_PLAYERS: 'FETCH_PLAYERS',\n  JOIN_GATHERING: 'JOIN_GATHERING',\n  LEAVE_GATHERING: 'LEAVE_GATHERING',\n  UPDATE_STATUS: 'UPDATE_STATUS',\n};\n\nexport const gameActions = {\n  GAME_REQUESTED: 'GAME_REQUESTED',\n  GAME_CREATED: 'GAME_CREATED',\n  GAME_STARTED: 'GAME_STARTED',\n  GAME_ENDED: 'GAME_ENDED',\n  MAKE_PLAY: 'MAKE_PLAY',\n  PLAY_IN_PROGRESS: 'PLAY_IN_PROGRESS',\n  PLAY_RECEIVED: 'PLAY_RECEIVED',\n  ROUND_OUTCOME: 'ROUND_OUTCOME',\n  GAME_UPDATE: 'GAME_UPDATE',\n  GAME_IN_PROGRESS: 'GAME_IN_PROGRESS',\n};\n\nexport const modalActions = {\n  OPEN_AUTHENTICATION_MODAL: 'OPEN_AUTHENTICATION_MODAL',\n  CLOSE_AUTHENTICATION_MODAL: 'CLOSE_AUTHENTICATION_MODAL',\n  TOGGLE_AUTHENTICATION_MODAL: 'TOGGLE_AUTHENTICATION_MODAL',\n  MODAL_MESSAGE: 'MODAL_MESSAGE',\n};\n\nexport const chatActions = {\n  SEND_MESSAGE: 'SEND_MESSAGE',\n  UPDATE_MESSAGES: 'UPDATE_MESSAGES',\n  USER_IS_TYPING: 'USER_IS_TYPING',\n  OPPONENT_IS_TYPING: 'OPPONENT_IS_TYPING',\n};\n","// export const GAME_IN_PROGRESS = 'GAME_IN_PROGRESS';\n\nconst gameStatus = {\n  NO_GAME: 'NO_GAME',\n\n  // Game has began, but no other player actions have taken place yet\n  GAME_STARTED: 'GAME_STARTED',\n\n  // Neither player has made a move since the last round was resolved. This could be used to avoide 'GAME_STARTED' from being necessary\n  WAITING_FOR_BOTH_PLAYERS: 'WAITING_FOR_BOTH_PLAYERS',\n\n  // The player has made their move, and app is waiting for opponent. The app should disable user's ability to make another play while waiting\n  PLAY_MADE_WAITING_FOR_OPPONENT: 'PLAY_MADE_WAITING_FOR_OPPONENT',\n\n  // The player's opponent has made move and is waiting for user to still play\n  OPPONENT_PLAY_WAITING_FOR_USER: 'OPPONENT_PLAY_WAITING_FOR_USER',\n\n  // Both players have made their play. App is determining winner. Neither player should be able to make their next move during this status\n  DETERMINING_ROUND_WINNER: 'DETERMINING_ROUND_WINNER',\n\n  // Game is ended. Either due to player selecting to end the game, or because either player has won enough games to win the match (default is best of 5 rounds)\n  GAME_ENDED: 'GAME_ENDED',\n};\n\nexport default gameStatus;\n","// import { FETCH_USER } from '../actions/types';\n// import { userActions } from '../actions/types';\nimport { chatActions } from '../actions/types';\n\n// export default (state = false, action) => {\nconst defaultState = {\n  messages: [],\n  userStatus: {\n    isTyping: false\n  },\n  opponentStatus: {\n    isTyping: false,\n  },\n  sendingMessage: false,\n};\n\nexport default (state = defaultState, action) => {\n  // console.log('in auth reducer, state:', state, 'action:', action);\n  // if (Object.keys(userActions).indexOf(action.type) > -1) {\n  //   console.log('in auth reducer, state:', state, 'action:', action);\n  // }\n  switch (action.type) {\n    case chatActions.UPDATE_MESSAGES:\n      return { ...state, messages: action.payload.messages };\n    case chatActions.OPPONENT_IS_TYPING:\n      return { ...state, opponentStatus: { ...state.opponentStatus, isTyping: action.payload } };\n    case chatActions.SEND_MESSAGE:\n      return { ...state, sendingMessage: !!(action.payload && action.payload.message) };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\n// import data from \"./dataReducer\";\nimport auth from './authReducer';\nimport gathering from './gatheringReducer';\nimport game from './gameReducer';\nimport modals from './modalsReducer';\nimport chat from './chatReducer';\n\nexport default combineReducers({\n  // data,\n  auth,\n  gathering,\n  game,\n  modals,\n  chat,\n});\n","// import { FETCH_USER } from '../actions/types';\nimport { userActions } from '../actions/types';\n\n// export default (state = false, action) => {\nexport default (state = null, action) => {\n  // console.log('in auth reducer, state:', state, 'action:', action);\n  // if (Object.keys(userActions).indexOf(action.type) > -1) {\n  //   console.log('in auth reducer, state:', state, 'action:', action);\n  // }\n  switch (action.type) {\n    case userActions.FETCH_USER:\n      return action.payload || null;\n    default:\n      return state;\n  }\n};\n","// import { FETCH_PLAYERS, JOIN_GATHERING, LEAVE_GATHERING } from \"../actions/types\";\nimport { gatheringActions } from '../actions/types';\n\nexport default (state = {}, action) => {\n  // console.log('received dispatch in Gathering reducer, state:', state, 'action:', action);\n  // if ([FETCH_PLAYERS, JOIN_GATHERING, LEAVE_GATHERING].indexOf(action.type) > -1) {\n  // if (Object.keys(gatheringActions).indexOf(action.type) > -1) {\n  //   console.log('received dispatch in Gathering reducer, state:', state, 'action:', action);\n  // }\n  switch (action.type) {\n    case gatheringActions.JOIN_GATHERING:\n      return action.payload;\n    case gatheringActions.FETCH_PLAYERS:\n      return { ...state, onlinePlayers: action.payload };\n    case gatheringActions.LEAVE_GATHERING:\n      return {};\n    default:\n      return state;\n  }\n};\n","import {\n  // GAME_CREATED,\n  // GAME_STARTED,\n  // GAME_ENDED,\n  // MAKE_PLAY,\n  // PLAY_RECEIVED,\n  gameActions,\n} from \"../actions/types\";\nimport gameStatuses from '../gameStatuses';\n\nconst getGameStateAfterPlayMade = (state, actionPayload) => {\n  // if (actionPayload && actionPayload.status === 'attempted') {\n  // console.log('in getGameStateAfterPlayMade, state', state);\n  const { gameStatus } = state;\n  const newGameStatus = gameStatus === gameStatuses.OPPONENT_PLAY_WAITING_FOR_USER ? gameStatuses.DETERMINING_ROUND_WINNER : gameStatuses.PLAY_MADE_WAITING_FOR_OPPONENT;\n  const newState = { ...state, gameStatus: newGameStatus, playerPlay: actionPayload.playerAction };\n  // console.log('returning newState', newState);\n  return newState;\n  // }\n  // else {\n  //   return state;\n  // }\n};\n\nconst getGameStateAfterPlayReceived = (state, actionPayload) => {\n  // console.log('in getGameStateAfterPlayReceived, actionPayload', actionPayload);\n  // console.log('in getGameStateAfterPlayReceived, state:', state);\n  // const { gameStatus } = state;\n  // const newGameStatus = gameStatus === gameStatuses.PLAY_MADE_WAITING_FOR_OPPONENT ? gameStatuses.DETERMINING_ROUND_WINNER : gameStatuses.OPPONENT_PLAY_WAITING_FOR_USER;\n  // const newState = { ...state, gameStatus: newGameStatus, playerPlay: actionPayload.playerAction };\n  // const { currentGameData } = state;\n  const { player1: player1Uid, player2: player2Uid, round, gameInProgress, } = state.gameData;\n  const { myUid } = state;\n  const { player: player1or2 } = actionPayload;\n  const playerUid = player1or2 === 'player1' ? player1Uid : player1or2 === 'player2' ? player2Uid : '';\n  // console.log('actionPayload', actionPayload, 'player1Uid', player1Uid, 'player2Uid', player2Uid, playerUid);\n  if ((playerUid !== player1Uid && playerUid !== player2Uid) || playerUid === '') {\n    // console.log('returning early from getGameStateAfterPlayReceived');\n    return state;\n  }\n  // console.log('not returning early from getGameStateAfterPlayReceived');\n  // const \n  // const myUid = \n  // const player1or2 = myUid === player1 ? 'player1' : 'player2';\n  \n  // console.log('key', key);\n  // const { playerUid } = actionPayload;\n  // const { myUid, opponentUid } = state;\n  // const { myUid, } = state;\n  const key = `${actionPayload.player}Actions`;\n  const playerActions = state.gameData.round >= actionPayload.playerActions.length ? actionPayload.playerActions : state.gameData[key];\n  // const gameData = { ...state.gameData, [key]: actionPayload.playerActions };\n\n  const gameData = { ...state.gameData, [key]: playerActions };\n  // const gameData = { ...state.gameData, [key]: actionPayload.length <= state.gameData.round ? actionPayload.playerActions : state.gameData[key] };\n  // const newGameStatus = gameStatus;\n  // console.log('gameData:', gameData);\n  // console.log('playerUid', playerUid, 'myUid', myUid, 'check:', playerUid === myUid);\n  const player1Actions = gameData.player1Actions || [];\n  const player2Actions = gameData.player2Actions || [];\n  // const newGameStatus = gameData.player1Actions.length === gameData.player2Actions.length ?\n  const newGameStatus = !gameInProgress ?\n    gameStatuses.GAME_ENDED :\n    player1Actions.length === player2Actions.length ?\n      player1Actions.length === round ?\n        gameStatuses.DETERMINING_ROUND_WINNER :\n        gameStatuses.WAITING_FOR_BOTH_PLAYERS :\n      playerUid === myUid ?\n        gameStatuses.PLAY_MADE_WAITING_FOR_OPPONENT :\n        gameStatuses.OPPONENT_PLAY_WAITING_FOR_USER;\n  const newState = { ...state, gameStatus: newGameStatus, gameData };\n  // const newState = { ...state, gameStatus: newGameStatus, [key]: actionPayload.playerActions };\n  // console.log('returning newState', newState);\n  return newState;\n};\n\n// export default (state = { gameStatus: gameStatuses.GAME_STARTED }, action) => {\nexport default (state = { gameStatus: gameStatuses.NO_GAME }, action) => {\n  if (Object.keys(gameActions).indexOf(action.type) > -1) {\n    // console.log('received game action dispatch in gameReducer, state:', state, 'action', action);\n  }\n  switch (action.type) {\n    // case GAME_CREATED:\n    //   // GAME_CREATED is signaled after creation of game. It is separate from the GAME_STARTED signal that listens for every game created and signals if the user is one of the players for that game\n    //   console.log('detected GAME_CREATED');\n    //   return state;\n    //   // return action.payload;\n    case gameActions.GAME_STARTED:\n      // console.log('detected GAME_STARTED');\n      return { ...state, gameKey: action.payload.gameKey, gameData: action.payload.gameData, gameStatus: gameStatuses.GAME_STARTED, myUid: action.payload.myUid, opponentUid: action.payload.gameData.player2 };\n    //   return action.payload;\n    case gameActions.GAME_ENDED:\n      return { ...state, gameKey: null, gameData: null, gameStatus: gameStatuses.GAME_ENDED };\n    case gameActions.MAKE_PLAY:\n      // console.log('detected MAKE_PLAY, action', action);\n      // return state;\n      // return { ...state, gameStatus: gameStatus.\n      return getGameStateAfterPlayMade(state, action.payload);\n    case gameActions.PLAY_RECEIVED:\n      // console.log('deteced PLAY_RECEIVED, action', action);\n      // return state;\n      return state.gameData ? getGameStateAfterPlayReceived(state, action.payload) : state;\n    case gameActions.ROUND_OUTCOME:\n      // const newGameData = { ...state.gameData, round: \n      const { player1Wins, player2Wins, maxNumberOfGames, round } = action.payload;\n      const gameOver = player1Wins + player2Wins >= maxNumberOfGames && Math.abs(player1Wins - player2Wins) >= 2;\n      const newRound = gameOver ? round : round + 1;\n      // const newRound = action.payload.player1Actions.length + 1\n      return { ...state, gameData: { ...action.payload, round: newRound }, gameStatus: gameStatuses.WAITING_FOR_BOTH_PLAYERS };\n    case gameActions.GAME_UPDATE:\n      // console.log('in reducer GAME_UPDATE, action.payload', action.payload);\n      return { ...state, gameData: action.payload, gameStatus: action.payload && action.payload.gameInProgress ? gameStatuses.WAITING_FOR_BOTH_PLAYERS : gameStatuses.GAME_ENDED };\n    case gameActions.GAME_IN_PROGRESS:\n      // console.log('in reducer GAME_IN_PROGRESS, action.payload', action.payload);\n      return { ...state, gameData: { ...state.gameData, gameInProgress: action.payload, }, gameStatus: !action.payload ? gameStatuses.GAME_ENDED : state.gameStatus };\n    default:\n      return state;\n  }\n};\n","// import { FETCH_USER } from '../actions/types';\nimport { modalActions } from '../actions/types';\n\nconst authenticationModalOpenDefault = false;\nexport default (state = { authenticationModalOpen: authenticationModalOpenDefault }, action) => {\n  // console.log('in modals reducer, state:', state, 'action:', action);\n  // if (Object.keys(modalActions).indexOf(action.type) > -1) {\n  //   console.log('in auth reducer, state:', state, 'action:', action);\n  // }\n  switch (action.type) {\n    case modalActions.OPEN_AUTHENTICATION_MODAL:\n      return { ...state, authenticationModalOpen: true, ...action.payload };\n    case modalActions.CLOSE_AUTHENTICATION_MODAL:\n      return { ...state, authenticationModalOpen: false, ...action.payload };\n    case modalActions.TOGGLE_AUTHENTICATION_MODAL:\n      return { ...state, authenticationModalOpen: !state.authenticationModalOpen, ...action.payload };\n    case modalActions.MODAL_MESSAGE:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","\nconst config = {\n  apiKey: \"AIzaSyBkyF3iDkn4oj30QNEJ8vsnIF57PY0xki0\",\n  authDomain: \"rps-game-d93c5.firebaseapp.com\",\n  databaseURL: \"https://rps-game-d93c5.firebaseio.com\",\n  projectId: \"rps-game-d93c5\",\n  storageBucket: \"rps-game-d93c5.appspot.com\",\n  messagingSenderId: \"131891175803\"\n};\n\nexport default config;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nimport config from './config/firebase';\n// Initialize Firebase\nfirebase.initializeApp(config);\n\nexport const refs = {\n  gathering: 'OnlineUsers',\n  games: 'Games',\n};\n\n\n// export const provider = new firebase.auth.GoogleAuthProvider();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const githubProvider = new firebase.auth.GithubAuthProvider();\n// export const authRef = firebase.auth();\nexport default firebase;\n","/**\n * A Javascript module to keep list (and count) of online users in a Firebase web app - by isolated rooms or globally.\n *\n * Initial idea from - http://stackoverflow.com/a/15982583/228648\n *\n * @url : https://gist.github.com/ajaxray/17d6ec5107d2f816cc8a284ce4d7242e\n * @auther : Anis Uddin Ahmad <anis.programmer@gmail.com>\n *\n * w:ajaxray.com | t:@ajaxray\n */\nvar Gathering = (function() {\n\n    var randomName = function () {\n        return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);\n    };\n\n    function Gathering(databaseReference, roomName) {\n\n        this.db = databaseReference;\n        this.roomName = roomName || 'globe';\n\n        this.room = this.db.ref(\"gatherings/\" + encodeURIComponent(this.roomName));\n        this.myName = '';\n        this.user = null;\n\n        this.updateStatus = function(uid, data) {\n            this.myName = data;\n            var presenceRef = this.db.ref(\".info/connected\");\n            var self = this;\n            presenceRef.on(\"value\", function(snap) {\n                if (snap.val() && self.user) {\n                    self.user.onDisconnect().remove();\n                    self.user.set(self.myName);\n                }\n            });\n        }\n\n        // this.join = function(uid, displayName) {\n        //     if(this.user) {\n        //         // console.error('Already joined.');\n        //         console.log('Already joined.');\n        //         return false;\n        //     }\n\n        //     this.myName = displayName || 'Anonymous - '+ randomName();\n        //     this.user = uid ? this.room.child(uid) : this.room.push();\n\n        //     // Add user to presence list when online.\n        //     var self = this;\n        //     var presenceRef = this.db.ref(\".info/connected\");\n        //     presenceRef.on(\"value\", function(snap) {\n        //         if (snap.val()) {\n        //             self.user.onDisconnect().remove();\n        //             self.user.set(self.myName);\n        //         }\n        //     });\n\n        //     return this.myName;\n        // };\n\n        this.join = function(uid, displayName) {\n            return new Promise((resolve, reject) => {\n            if(this.user) {\n                // console.error('Already joined.');\n                console.log('Already joined.');\n                // return false;\n                resolve ( false );\n            }\n\n            this.myName = displayName || 'Anonymous - '+ randomName();\n            this.user = uid ? this.room.child(uid) : this.room.push();\n\n            // Add user to presence list when online.\n            var self = this;\n            var presenceRef = this.db.ref(\".info/connected\");\n            presenceRef.on(\"value\", function(snap) {\n                if (snap.val()) {\n                    self.user.onDisconnect().remove();\n                    self.user.set(self.myName);\n                }\n            });\n\n            // return this.myName;\n            resolve ( this.myName );\n            });\n        }\n\n        this.leave = function() {\n            this.user.remove();\n            this.myName = '';\n        };\n\n        this.over = function () {\n            this.room.remove();\n        };\n\n        this.onUpdated = function (callback) {\n            if('function' == typeof callback) {\n                this.room.on(\"value\", function(snap) {\n                    callback(snap.numChildren(), snap.val());\n                });\n            } else {\n                console.error('You have to pass a callback function to onUpdated(). That function will be called (with user count and hash of users as param) every time the user list changed.');\n            }\n        };\n    }\n\n    return Gathering;\n})();\n\nexport default Gathering;\n","// import firebase from '../firebase';\nimport firebase, { refs } from '../firebase';\n// import { gatheringRef } from '../firebase';\n// import Gathering from '../gathering';\nimport {\n  gameActions,\n} from './types';\n\n// const GamesRef = firebase.database().ref(refs.games);\nexport const GamesRef = () => firebase.database().ref(refs.games);\nexport const GamesRefChild = (childRef) => firebase.database().ref(`${refs.games}/${childRef}`);\n\nexport const endGame = gameUID => dispatch => {\n  // console.log('GamesRef', GamesRef && GamesRef().toString());\n  // Object.keys(GamesRef()).forEach(key => console.log('GamesRef key:', key, 'value:', GamesRef()[key] && GamesRef()[key].toString()));\n  // console.log('GamesRef()', GamesRef());\n  return GamesRef().child(gameUID).remove()\n    .then(() => {\n      // console.log('removed game, ref:', gameUID);\n      dispatch({\n        type: gameActions.GAME_ENDED,\n        payload: { gameUID },\n      });\n    })\n    .catch(error => {\n      // console.log('error removing game');\n      dispatch({\n        type: gameActions.GAME_ENDED,\n        payload: { error: error.toString() },\n      });\n    });\n  // GamesRef().child(app.gameID).remove();\n};\n\nexport const createEndGameListener = gameRef => dispatch => {\n  // console.log('in createEndGameListener');\n  // return gameRef.child('gameInProgress').on('value', (snapshot) => {\n  // gameRef.child('gameInProgress').on('value', (snapshot) => {\n  gameRef.child('gameInProgress').on('value', () => {\n    // console.log('received gameInProgress change indicator');\n    // dispatch({\n    //   type: gameActions.GAME_IN_PROGRESS,\n    //   payload: snapshot.val(),\n    // });\n    gameRef.once('value', (snapshot) => {\n      const gameData1 = snapshot.val();\n      dispatch({\n        type: gameActions.GAME_UPDATE,\n        payload: gameData1,\n      });\n    });\n  });\n\n  return gameRef.child('gameClosed').on('value', (snapshot) => {\n    // console.log('received endGame indicator from firebase, snapshot.val()', snapshot.val());\n    // if (snapshot.val() == null || !snapshot.val()) {\n    if (snapshot.val() == null || snapshot.val() === true) {\n      const gameUID = gameRef.key;\n      dispatch({\n        type: gameActions.GAME_ENDED,\n        payload: { gameUID }\n      });\n    }\n  });\n};\n\n\n// const createOpponentActionListener = (dispatch, opponent) => {\n// const createOpponentActionListener = (gameRef, opponent) => dispatch => {\n//   // this is where the app checks for (or waits for) an opponent action\n//   // opponent is string that says 'player1' or 'player2'\n//   const refString = `${opponent}Actions`;\n//   console.log('creating opponent action listener', refString);\n//   return gameRef.child(refString).on('value', (snapshot) => {\n//     console.log('received updated on opponent action, snapshot.val()', snapshot.val());\n//     const play = snapshot.val();\n//     if (play && Object.keys(play).length === 1) {\n//       dispatch({\n//         type: gameActions.PLAY_RECEIVED,\n//         payload: { player: opponent, play: Object.keys(play)[0] }\n//       });\n//     }\n//   });\n// };\n\nconst createPlayerActionListener = (gameRef, player) => dispatch => {\n  // this is where the app checks for (or waits for) a player action\n  // player is string that says 'player1' or 'player2'\n  const refString = `${player}Actions`;\n  // console.log('creating player action listener', refString);\n  return gameRef.child(refString).on('value', (snapshot) => {\n    // console.log('received updated on player action, snapshot.val()', snapshot.val());\n    const plays = snapshot.val();\n    const playerActions = plays && Object.keys(plays).length > 0 ? Object.keys(plays).map(key => plays[key]) : [];\n    // if (play && Object.keys(play).length === 1) {\n    if (playerActions.length > 0) {\n      // console.log('playerActions for player', player, playerActions);\n      dispatch({\n        type: gameActions.PLAY_RECEIVED,\n        payload: { player, playerActions }\n      });\n    }\n  });\n};\n\nconst createRoundUpdateListener = (gameRef) => dispatch => {\n\n  // console.log('creating player action listener', refString);\n  return gameRef.child('round').on('value', () => {\n    // console.log('createRoundUpdateListener listener triggered');\n    return gameRef.once('value', (snapshot) => {\n      // console.log('createRoundUpdateListener game snapshot', snapshot.val());\n      const gameData = snapshot.val();\n      dispatch({\n        type: gameActions.GAME_UPDATE,\n        // payload: { gameKey: snapshotKey, gameData: game }\n        payload: gameData\n      });\n    });\n  });\n};\n\nexport const newGameListenerEvent = (myUid, snapshotKey, snapshotVal) => dispatch => {\n  // console.log('in newGameListenerEvent, myUid', myUid, 'snapshotVal', snapshotVal);\n  // return GamesRef().on(\"child_added\", (snapshot) => {\n  const game = snapshotVal;\n  // console.log('detected new game added to GamesRef, myUid:', myUid, 'game:', game);\n  // if ((game.player1 === myUid || game.player2 === myUid) && myUid.length > 1 && game.gameInProgress) {\n  if ((game.player1 === myUid || game.player2 === myUid) && myUid.length > 1 && !game.gameClosed) {\n    // console.log('new game is my game');\n    // would like to add a check here or somewhere that prevents me from starting a game if I'm in an existing one.\n    const player1Actions = game.player1Actions ? Object.keys(game.player1Actions).map(key => game.player1Actions[key]) : [];\n    const player2Actions = game.player2Actions ? Object.keys(game.player2Actions).map(key => game.player2Actions[key]) : [];\n    const gameData = { ...game, player1Actions, player2Actions };\n    dispatch({\n      type: gameActions.GAME_STARTED,\n      // payload: { gameKey: snapshotKey, gameData: game }\n      payload: { gameKey: snapshotKey, gameData, myUid }\n    });\n    // const { player1, player2 } = game;\n    const { player1 } = game;\n    const player1or2 = myUid === player1 ? 'player1' : 'player2';\n    const opponent = myUid !== player1 ? 'player1' : 'player2';\n    // const gameRef = GamesRef().child(snapshotKey);\n    const gameRef = GamesRefChild(snapshotKey);\n\n    // createGameListener(GamesRef().child(snapshot.key), player1or2);\n    // createOpponentActionListener(dispatch, opponent);\n    dispatch(createRoundUpdateListener(gameRef));\n    dispatch(createEndGameListener(gameRef));\n    // dispatch(createOpponentActionListener(gameRef, opponent));\n    dispatch(createPlayerActionListener(gameRef, opponent));\n    dispatch(createPlayerActionListener(gameRef, player1or2));\n  }\n  else {\n    // console.log('new game is not my game');\n  }\n  // });\n};\n\n\nexport const createNewGameListener = myUid => dispatch => {\n  // console.log('creating newGame listener, myUid', myUid);\n  // return dispatch(newGameListenerEvent(myUid\n  return GamesRef().on('child_added', (snapshot) => {\n    // console.log('newGameListener fired, myUid:', myUid);\n    return dispatch(newGameListenerEvent(myUid, snapshot.key, snapshot.val()));\n  });\n  // return GamesRef().on(\"child_added\", (snapshot) => {\n  //   const game = snapshot.val();\n  //   console.log('detected new game added to GamesRef, myUid:', myUid, 'game:', game);\n  //   if (game.player1 === myUid || game.player2 === myUid) {\n  //     console.log('new game is my game');\n  //     // would like to add a check here or somewhere that prevents me from starting a game if I'm in an existing one.\n  //     dispatch({\n  //       type: gameActions.GAME_STARTED,\n  //       payload: { gameKey: snapshot.key, gameData: game }\n  //     });\n  //     // const { player1, player2 } = game;\n  //     const { player1 } = game;\n  //     // const player1or2 = myUid === player1 ? 'player1' : 'player2';\n  //     const opponent = myUid !== player1 ? 'player1' : 'player2';\n  //     const gameRef = GamesRef().child(snapshot.key);\n\n  //     // createGameListener(GamesRef().child(snapshot.key), player1or2);\n  //     // createOpponentActionListener(dispatch, opponent);\n  //     dispatch(createEndGameListener(gameRef));\n  //     dispatch(createOpponentActionListener(gameRef, opponent));\n  //   }\n  //   else {\n  //     console.log('new game is not my game');\n  //   }\n  // });\n};\n\n// export const createGameListener = (gameRef, player1or2) => dispatch => {\n//   // console.log('creating listener for gameRef', gameRef);\n//   // GameRef = gameRef;\n//   gameRef.on('value', (snapshot) => {\n//     console.log('received update for game, snapshot.val()', snapshot.val());\n//   });\n//   // GameRef.on\n// };\n\n\n// export const updateWithRoundOutcome = (gameData, gameKey, gameRef) => (dispatch) => {\nexport const updateWithRoundOutcome = (gameData, gameKey, gameRef) => () => {\n  // const refString = `${player}Actions`;\n  // console.log('creating player action listener', refString);\n  // console.log('in updateWithRoundOutcome, gameData:', gameData);\n  const { maxNumberOfGames } = gameData;\n  const minNumberOfWins = Math.ceil(maxNumberOfGames / 2);\n  // const { player1Actions, player2Actions } = gameData;\n  const player1Actions = Object.values(gameData.player1Actions);\n  const player2Actions = Object.values(gameData.player2Actions);\n  // console.log('player1Actions', player1Actions, 'player2Actions', player2Actions); \n  const wins = player1Actions.map((player1Action, i) => {\n    const player2Action = player2Actions[i];\n    // console.log('player1Action', player1Action, 'player2Action', player2Action);\n    // go through all scenarios where player 1 loses. \n    // If one of them hits, return 2 (for player 2 wins).\n    // otherwise, they either tie (return 0) or player 1 wins (return 1)\n    if (player1Action === 'rock' && player2Action === 'paper') {\n      return 2;\n    }\n    else if (player1Action === 'paper' && player2Action === 'scissors') {\n      return 2;\n    }\n    else if (player1Action === 'scissors' && player2Action === 'rock') {\n      return 2;\n    }\n    else if (player1Action === player2Action) {\n      // tie\n      return 0;\n    }\n    else {\n      // player 1 wins\n      return 1;\n    }\n  });\n  // console.log('wins:', wins);\n  const player1Wins = wins.reduce((acc, outcome) => (outcome === 1 ? 1 : 0) + acc, 0);\n  const player2Wins = wins.reduce((acc, outcome) => (outcome === 2 ? 1 : 0) + acc, 0);\n  const ties = wins.reduce((acc, outcome) => (outcome === 0 ? 1 : 0) + acc, 0);\n  // set overall winner equal to the player number, or 0 if game is not over\n  const winner = player1Wins >= minNumberOfWins ? 1 : player2Wins >= minNumberOfWins ? 2 : 0;\n  const gameInProgress = (winner === 0);\n  // increment round unless game is over. Get current round from number of player actions\n  const round = player1Actions.length + (winner === 0 ? 1 : 0);\n  // console.log('ties', ties, 'winner', winner, 'gameInProgress', gameInProgress, 'minNumberOfWins', minNumberOfWins);\n  // const gameRef = GamesRef().child(gameKey);\n\n  const gameRefToUse = typeof gameRef === 'undefined' ? GamesRefChild(gameKey) : gameRef;\n  // if (typeof gameRef === 'undefined') {\n  //   gameRef = GamesRefChild(gameKey);\n  // }\n  // console.log('gameRef', gameRef);\n  // console.log('gameKey', gameKey);\n  gameRefToUse.update({\n    player1Wins, player2Wins, ties, gameInProgress, round, winner,\n  });\n\n};\n\nexport const getRoundOutcome = (GameKey) => (dispatch) => {\n  // const refString = `${player}Actions`;\n  // console.log('creating player action listener', refString);\n  const GameRef = GamesRef().child(GameKey);\n  return GameRef.once('value', (snapshot) => {\n    console.log('received updated gameData from getRoundOutcome, snapshot.val()', snapshot.val());\n    const gameData = snapshot.val();\n    return dispatch(updateWithRoundOutcome(gameData, GameKey));\n    // const playerActions = plays && Object.keys(plays).length > 0 ? Object.keys(plays).map(key => plays[key]) : [];\n    // if (play && Object.keys(play).length === 1) {\n    // if (playerActions.length > 0) {\n    // return dispatch({\n    //   type: gameActions.ROUND_OUTCOME,\n    //   payload: { gameData }\n    // });\n  });\n};\n\nexport const makePlay = (GameKey, player1or2, playerUid, playerAction) => dispatch => {\n  // console.log('in makePlay, gameRef:', GameKey, 'player1or2', player1or2, 'playerUid', playerUid, 'playerAction', playerAction);\n  const gameValRef = `${player1or2}Actions`;\n\n  // console.log('GamesRef', GamesRef);\n  // console.log('player1or2:', player1or2, 'gameValRef', gameValRef, 'playerAction', playerAction);\n  if (player1or2 && playerAction) {\n    dispatch({\n      type: gameActions.MAKE_PLAY,\n      payload: { player1or2, playerAction },\n    });\n    const GameRef = GamesRef().child(GameKey);\n    // const GameRef = Games\n\n    // only submit the move if the current count of playerMoves in firebase is less than the current round\n    // return GameRef.child(gameValRef).\n\n    return GameRef.child(gameValRef).push(playerAction)\n      .then(() => {\n      // .then(ref => {\n        // console.log('added player action, playerAction:', playerAction, 'gameValRef', gameValRef, 'ref:', ref);\n      })\n      // });\n      .catch(err => console.error('error on makePlay function', err));\n  }\n  else {\n    return Promise.reject(new Error('unable to make play'));\n  }\n\n  // // This is for only having a single player move recorded in Firebase, and just updating on each round. I replaced this with a collection of moves, one for each round\n  // return GameRef.update({\n  //   // [player1or2 + \"_Actions\"]: playerAction\n  //   [gameValRef]: playerAction\n  // }).then((playActionRef) => {\n  //   console.log('playActionRef', playActionRef);\n  //   // this.setState({ playInProgress: true });\n  // });\n};\n\nexport const requestGame = (user, otherPlayer) => dispatch => {\n  // console.log('in requestGame action request, user:', user, 'otherPlayer', otherPlayer);\n  dispatch({\n    type: gameActions.GAME_REQUESTED,\n    payload: { user, otherPlayer }\n  });\n\n  const { uid: player1, displayName: player1Name } = user;\n  // console.log('player1', player1);\n  const maxNumberOfGames = 5;\n  \n  const { uid: player2, displayName: player2Name } = otherPlayer;\n  if (player1 && player2 && player1.length > 0 && player2.length > 0) {\n    // console.log('creating game');\n    const newGame = {\n      player1,\n      player2,\n      player1Wins: 0,\n      player2Wins: 0,\n      player1Name,\n      player2Name,\n      ties: 0,\n      maxNumberOfGames,\n      gameInProgress: true,\n      gameClosed: false,\n      winner: 0,\n      round: 1,\n      timestamp: firebase.database.ServerValue && firebase.database.ServerValue.TIMESTAMP,\n    };\n    // console.log('GamesRef():', GamesRef().toString());\n    // Object.keys(GamesRef()).forEach(key => console.log('GamesRef key:', key, 'value:', GamesRef()[key] && GamesRef()[key].toString()));\n    // return Promise.resolve(true);\n    return GamesRef().push(newGame)\n      .then(() => {\n      // .then(ref => {\n        // console.log('created new game, key is', ref.key);\n        // return Promise.resolve(true);\n        // rather than dispatch message, will use the firebase listener for new games to signal the new game\n        // that way, the user will be notified of games created by other users as well as one the user creates.\n        return dispatch({ type: gameActions.GAME_CREATED });\n      // });\n      })\n      .catch(err => {\n        // console.log('error when creating new game', err);\n        return Promise.reject(err);\n      });\n  }\n  else {\n    // console.log('not creating new game');\n    return Promise.reject(new Error('not creating new game'));\n  }\n};\n\n","import firebase from '../firebase';\n// import { gathering } from '../firebase';\nimport Gathering from '../gathering';\n// import { FETCH_PLAYERS, JOIN_GATHERING, LEAVE_GATHERING } from './types';\nimport { gatheringActions } from './types';\nimport { createNewGameListener } from './game';\n\n// export const fetchPlayers = (gathering) => dispatch => {\n//   // console.log('in fetchPlayers action, gathering', gathering);\n//   if (gathering != null && typeof gathering.onUpdated === 'function') {\n//     // console.log('found gathering');\n//     gathering.onUpdated((count, players) => { \n//       // console.log(\"gathering players\", players, 'count', count);\n//       const onlinePlayers = count > 0 && players && Object.keys(players).length > 0 ?\n//         Object.keys(players)\n//           // .filter(uid => uid !== user.uid)\n//           .map(uid => ({ ...players[uid], uid })) :\n//         [];\n//       // console.log('dispatching online players ', onlinePlayers);\n//       dispatch({\n//         type: FETCH_PLAYERS,\n//         payload: onlinePlayers\n//       });\n//       // this.setState({ onlinePlayers });\n//     });\n//   }\n//   else {\n//     // console.log('did not find gathering ref');\n//   }\n// };\n\nexport const joinGathering = (user) => dispatch => {\n  // console.log('in joinGathering action, user', user);\n  const gathering = new Gathering(firebase.database(), 'OnlineUsers');\n  // gathering = new Gathering(firebase.database(), 'OnlineUsers');\n  const inGame = false;\n  const { photoURL } = user;\n  // gathering.join(user.id, { displayName: user.displayName, inGame, photoURL });\n  gathering.join(user.uid, { displayName: user.displayName, inGame, photoURL })\n    .then(() => {\n      // console.log('in then clause of joinGathering, gathering:', gathering);\n      // fetchPlayers(gathering);\n      gathering.onUpdated((count, players) => { \n        // console.log(\"gathering players\", players, 'count', count);\n        const onlinePlayers = count > 0 && players && Object.keys(players).length > 0 ?\n          Object.keys(players)\n            // .filter(uid => uid !== user.uid)\n            .map(uid => ({ ...players[uid], uid })) :\n          [];\n        // console.log('dispatching online players ', onlinePlayers);\n        dispatch({\n          type: gatheringActions.FETCH_PLAYERS,\n          payload: onlinePlayers\n        });\n        // this.setState({ onlinePlayers });\n        // get my gathering id\n        // const myGatheringUid = onlinePlayers.find(player => player.uid === user.uid);\n        // dispatch({\n        //   type: 'UPDATE_ID',\n        //   payload: myGatheringUid\n        // });\n      });\n      // createNewGameListener(dispatch, user.uid);\n      dispatch(createNewGameListener(user.uid));\n    })\n    .catch(error => console.log('error when joining gathering', error));\n  // gathering.onUpdated((count, players) => { \n  //   console.log(\"gathering players\", players, 'count', count);\n  //   const onlinePlayers = count > 0 && players && Object.keys(players).length > 0 ?\n  //     Object.keys(players)\n  //       .filter(uid => uid !== user.uid)\n  //       .map(uid => ({ ...players[uid], uid })) :\n  //     [];\n  //   // this.setState({ onlinePlayers });\n  // });\n  dispatch({\n    type: gatheringActions.JOIN_GATHERING,\n    payload: gathering\n    // payload: null\n  });\n};\n\nexport const leaveGathering1 = (user, gathering) => dispatch => {\n  console.log('in leaveGathering action, user', user);\n  // const gathering = \n  gathering.leave();\n  dispatch({\n    type: gatheringActions.LEAVE_GATHERING,\n    payload: null\n  });\n};\n\nexport const changePlayerStatus = (user, gathering) => dispatch => {\n  console.log('running changePlayerStatus, user:', user, 'gathering', gathering);\n  gathering.updateStatus(user.uid, user);\n  dispatch({\n    type: gatheringActions.UPDATE_STATUS,\n    payload: user,\n  });\n};\n// app.gathering.updateStatus(authUser.uid, {displayName: authUser.displayName, inGame: false})\n\n\n// export const leaveGathering = () => {\nexport const leaveGathering = (gathering) => dispatch => {\n  // console.log('in leaveGathering action, user', user);\n  // const gathering = \n  // const gathering = new Gathering(firebase.database(), 'OnlineUsers');\n  // const gathering = firebase.database().ref('gatherings/OnlineUsers');\n  // const gathering = firebase.database().ref('gatherings');\n  // gathering.on('value', snapshot => console.log('gathering snapshot:', snapshot.val()));\n  // gathering.leave();\n  if (gathering != null && typeof gathering !== 'undefined') {\n    // console.log('gathering', gathering);\n    gathering.leave();\n    dispatch({\n      type: gatheringActions.LEAVE_GATHERING,\n      // payload: null\n    });\n  }\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  // CardTitle,\n  CardText,\n  CardFooter,\n  CardHeader,\n  Row,\n  Col,\n  Badge,\n} from 'reactstrap';\n// import Bounce from 'react-reveal/Bounce';\nimport { connect } from 'react-redux';\n\n// import firebase from '../firebase';\n// import LoadingSpinner from './LoadingSpinner';\nimport {\n  endGame,\n  makePlay,\n  getRoundOutcome,\n} from '../actions/game';\n\nimport {\n  changePlayerStatus,\n} from '../actions/gatheringActions';\n\nimport gameStatuses from '../gameStatuses';\n\n\nclass Game extends Component {\n\n  componentDidMount() {\n    // console.log('in componentDidMount');\n    const { user, gathering, } = this.props;\n    const inGame = true;\n    const player = this.props.players.find(player1 => player1.uid === user.uid);\n    const player1 = { ...player, inGame };\n    this.props.changePlayerStatus(player1, gathering);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { gameStatus, myUid, } = this.props.game;\n    // console.log('myUid', myUid, 'this.props.game.gameData', this.props.game.gameData.player1);\n    if (gameStatus === gameStatuses.DETERMINING_ROUND_WINNER && gameStatus !== prevProps.game.gameStatus && prevProps.game.gameStatus.length > 0 && myUid === this.props.game.gameData.player1) {\n      this.props.getRoundOutcome(this.props.gameUID);\n    }\n  }\n\n  getState() {\n    // this isn't really the state it is getting, it is just transforming props to needed stuff for render\n    // console.log('running getState');\n    const { user } = this.props;\n    const {\n      // gameInProgress,\n      // maxNumberOfGames,\n      player1: player1UID,\n      player2: player2UID,\n      player1Wins,\n      player2Wins,\n      player1Name,\n      player2Name,\n      ties,\n      winner,\n      // playInProgress,\n    } = this.props.game.gameData;\n    // const { uid: myUID, displayName: myName } = user;\n    const { uid: myUID, } = user;\n    // console.log(`player1UID ${player1UID}, player2UID ${player2UID}, myUID ${myUID}, player1UID === myUID: ${player1UID === myUID}`);\n    const player1 = { uid: player1UID, name: player1Name, wins: player1Wins };\n    const player2 = { uid: player2UID, name: player2Name, wins: player2Wins };\n    // const { uid: opponentUID, name: opponentName, wins: opponentWins } = player1UID === myUID ? player2 : player2UID === myUID ? player1 : null;\n    const { name: opponentName, wins: opponentWins } = player1UID === myUID ? player2 : player2UID === myUID ? player1 : {};\n    const { wins: myWins } = player1UID === myUID ? player1 : player2;\n    // const player1or2 = player1UID === myUID ? \"player1\" : \"player2\";\n\n    return ({\n      // myUID,\n      // opponentUID,\n      opponentName,\n      myWins,\n      opponentWins,\n      ties,\n      winner,\n      // maxNumberOfGames,\n      // gameInProgress,\n      // player1or2,\n      // playInProgress,\n    });\n  }\n\n\n  play = (e) => {\n    const { value: playerAction } = e.target;\n    // const player = playerid === game.player1 ? \"player1\" : \"player2\";\n    const { player1: player1UID, player2: player2UID } = this.props.game.gameData;\n    const { uid: myUID } = this.props.user;\n    const player1or2 = player1UID === myUID ? \"player1\" : player2UID === myUID ? \"player2\" : \"\";\n    // const { player1or2 } = this.state;\n    // console.log('e.target', e.target, 'playerAction ', playerAction);\n    // console.log('player1UID', player1UID, 'myUID', myUID, 'player1or2', player1or2, 'playerAction', playerAction);\n    if (playerAction.match(/(rock|paper|scissors)/) != null && player1or2 && player1or2.length > 1) {\n      const { gameKey } = this.props.game;\n      // this.props.makePlay(gameKey, player1or2, playerAction);\n      this.props.makePlay(gameKey, player1or2, myUID, playerAction);\n    }\n    else {\n      // console.log('invalid playerAction or playerinfo', playerAction, player1or2);\n    }\n  }\n\n  endCurrentGame = () => {\n    // console.log('ending current game');\n    if (this.props.endGame && this.props.gameUID) {\n      // console.log('creating endGame action');\n      this.props.endGame(this.props.gameUID);\n    }\n  }\n\n  render = () => {\n    const {\n      opponentName,\n      // myUID,\n      // opponentUID,\n      myWins,\n      opponentWins,\n      ties,\n      winner,\n      // messages,\n      // maxNumberOfGames,\n      // gameInProgress,\n      // playInProgress,\n    } = this.getState();\n    // } = this.state; \n\n    const { gameStatus, } = this.props.game;\n    const { gameInProgress, round } = this.props.game.gameData;\n    const playEnabled = gameInProgress && gameStatus !== gameStatuses.PLAY_MADE_WAITING_FOR_OPPONENT && gameStatus !== gameStatuses.DETERMINING_ROUND_WINNER;\n    // console.log('gameInProgress', gameInProgress, 'gameStatus', gameStatus);\n    // const playEnabled = true;\n\n\n    // const loadingMessage = 'You played ...';\n    // const loadingMessage = gameStatus;\n    const messages = {\n      [gameStatuses.DETERMINING_ROUND_WINNER]: 'Determining Round Winner...',\n      [gameStatuses.PLAY_MADE_WAITING_FOR_OPPONENT]: 'You have played, and we are waiting on your opponent...',\n      [gameStatuses.WAITING_FOR_BOTH_PLAYERS]: 'Waiting for both players to make a play...',\n      [gameStatuses.OPPONENT_PLAY_WAITING_FOR_USER]: 'Your opponent has played and is waiting for you to play...',\n      [gameStatuses.GAME_STARTED]: 'Game started...',\n      [gameStatuses.GAME_ENDED]: 'Game is over...',\n      [gameStatuses.NO_GAME]: 'No Game currently in progress...',\n    };\n\n    const loadingMessage = gameStatus === gameStatuses.GAME_ENDED && winner > 0 ?\n      myWins > opponentWins ?\n        'You Won!' :\n        'You lost.' :\n      messages[gameStatus];\n      // gameStatus;\n\n    const activeCardBody = (\n      <CardBody className=\"\">\n        <Row>\n          <Col xl={6} lg={8} md={6} sm={6} xs={6} className=\"text-right\">Your Opponent:</Col>\n          <Col className=\"text-left\">{opponentName}</Col>\n        </Row>\n        <Row>\n          <Col xl={6} lg={8} md={6} sm={6} xs={6} className=\"text-right\">Round Number:</Col>\n          <Col className=\"text-left \"><Badge color=\"secondary\">{round}</Badge></Col>\n        </Row>\n\n        <Row>\n          <Col xl={6} lg={8} md={6} sm={6} xs={6} className=\"text-right\">Your Wins:</Col>\n          {/* <Col className=\"text-left\">{loadingMessage === 'You Won!' ? <Bounce>{myWins}</Bounce> : myWins}</Col> */}\n          <Col className=\"text-left\"><Badge>{myWins}</Badge></Col>\n          {/* <Col className=\"text-left\"><Bounce><Badge>{myWins}</Badge></Bounce></Col> */}\n        </Row>\n        <Row>\n          <Col xl={6} lg={8} md={6} sm={6} xs={6} className=\"text-right\">Opponent Wins:</Col>\n          <Col className=\"text-left\"><Badge>{opponentWins}</Badge></Col>\n        </Row>\n        <Row className=\"mb-2\">\n          <Col xl={6} lg={8} md={6} sm={6} xs={6} className=\"text-right\">Ties:</Col>\n          <Col className=\"text-left\"><Badge>{ties}</Badge></Col>\n        </Row>\n\n        {/* { playInProgress ? <LoadingSpinner {...spinnerProps} /> : */}\n        {/*     <>                                                    */}\n        <Button color=\"primary\" className=\"mr-2 game-action\" onClick={this.play} value=\"rock\" disabled={!playEnabled}> Rock </Button>\n        <Button color=\"primary\" className=\"mr-2 game-action\" onClick={this.play} value=\"paper\" disabled={!playEnabled}> Paper </Button>\n        <Button color=\"primary\" className=\"game-action\" onClick={this.play} value=\"scissors\" disabled={!playEnabled}> Scissors </Button>\n        <br />\n        <br />\n        {/*     </> */}\n        {/* }       */}\n        <Button color=\"danger\" onClick={this.endCurrentGame} id=\"end-game\">End Match</Button>\n      </CardBody>\n    );\n    // return <LoadingSpinner loading/>\n\n\n    return (\n      <Card className=\"border-success game\" >\n        <CardHeader className=\"text-white bg-success bg\">\n          Your Active Game\n        </CardHeader>\n        {/* {playInProgress ? <LoadingSpinner {...spinnerProps} /> : activeCardBody} */}\n        {activeCardBody}\n        <CardFooter><CardText>{loadingMessage}</CardText></CardFooter>\n      </Card>\n    );\n  }\n}\n\n\nfunction mapStateToProps({ auth, gathering, game }) {\n  const onlinePlayers = gathering != null ? gathering.onlinePlayers || [] : [];\n  return {\n    user: auth,\n    gathering,\n    players: onlinePlayers,\n    game,\n    gameUID: game.gameKey,\n  };\n}\n\n\nexport default connect(mapStateToProps, { endGame, makePlay, getRoundOutcome, changePlayerStatus })(Game);\n","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport Avatar from 'react-avatar';\n\n\nconst AppNavbar = (props) => {\n  const { auth, signOut: signOutAction, gathering, toggleAuthenticationModal: toggleModal } = props;\n  const userSignOut = () => signOutAction({ auth, gathering });\n\n  const userMenu = auth ? (\n    <UncontrolledDropdown nav className=\"\" inNavbar>\n      <DropdownToggle nav caret>\n\n        {/* <img src=\"https://getbootstrap.com/docs/4.1/assets/brand/bootstrap-solid.svg\" width=\"30\" height=\"30\" alt=\"\" /> */}\n        {/* <img src={auth.photoURL } width=\"40\" height=\"40\" alt={auth.displayName} /> */}\n        { auth.photoURL ?\n          <Avatar src={auth.photoURL} alt={auth.displayName} className=\"\" size=\"25\" /> :\n          <Avatar name={auth.displayName} color={Avatar.getRandomColor('sitebase', ['green'])} className=\"\" size=\"25\" />\n        }\n      </DropdownToggle>\n      <DropdownMenu right>\n        <DropdownItem onClick={userSignOut}>Log Out {auth.displayName}</DropdownItem>\n        {/* <DropdownItem divider />                       */}\n        {/* <DropdownItem disabled>Option 2</DropdownItem> */}\n        {/* <DropdownItem divider />                       */}\n        {/* <DropdownItem disabled>Reset</DropdownItem>    */}\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  ) : (\n    <NavItem>\n      {/* <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink> */}\n      {props.auth ?\n        <Button outline onClick={userSignOut}>Log Out {auth.displayName}</Button>\n        :\n        <Button outline onClick={toggleModal}>Log In/Sign Up</Button>\n      }\n    </NavItem>\n  );\n  \n  return (\n    // <Navbar color=\"dark\" light expand=\"md\" user={user} dark>\n    <Navbar color=\"dark\" light expand=\"md\" dark className=\"sticky-top\" >\n      <NavbarBrand href=\"/\">\n        <img src={props.logo} height=\"45\" alt=\"Rock Paper Scissors\" />\n      </NavbarBrand>\n      <NavbarToggler onClick={props.toggle} />\n      {/* <Collapse isOpen={this.state.isOpen} navbar> */}\n      <Collapse isOpen={props.isOpen} navbar>\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem className=\"ml-auto\" >\n            <NavLink target=\"_blank\" href=\"https://github.com/semlak/rock-paper-scissors-firebase-react-redux/\">On Github</NavLink>\n          </NavItem>\n          <NavItem className=\"ml-auto\" >\n            <Nav>\n              {userMenu}\n            </Nav>\n          </NavItem>\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\n\n\nAppNavbar.defaultProps = {\n  auth: {},\n};\n\nAppNavbar.propTypes = {\n  auth: PropTypes.shape({\n    displayName: PropTypes.string,\n    uid: PropTypes.string,\n    photoURL: PropTypes.string,\n  }),\n  // signIn: PropTypes.func.isRequired,\n  toggleAuthenticationModal: PropTypes.func.isRequired,\n  signOut: PropTypes.func.isRequired,\n};\n\nexport default AppNavbar;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport default function(ComposedComponent) {\n  class Authentication extends Component {\n    static contextTypes = {\n      router: PropTypes.object\n     };\n\n    componentWillMount() {\n      if (this.props.auth === null) {\n        this.context.router.history.push(\"/\");\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      // console.log('in componentWillUpdate, nextProps:', nextProps);\n      if (!nextProps.auth) {\n        // console.log('not authenticated');\n        this.context.router.history.push('/');\n      }\n      else {\n        // console.log('user is authenticated');\n      }\n    }\n\n    render() {\n      // console.log('in requireAuth render, this.props', this.props);\n      if (this.props.auth) {\n        return <ComposedComponent {...this.props} />;\n      }\n      else {\n        return null;\n      }\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { auth: state.auth };\n  }\n\n  return connect(mapStateToProps)(Authentication);\n}\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  // CardTitle,\n  // CardText,\n  // CardFooter,\n  // CardHeader,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport Avatar from 'react-avatar';\n\n// import defaultPlayerImage from '../img/user.png';\n\n// import { joinGathering } from '../actions/gatheringActions';\nimport {\n  changePlayerStatus,\n} from '../actions/gatheringActions';\n\n\nconst PlayerAvatar = ({ player }) => (\n  player.photoURL && player.photoURL.length > 0 ?\n    <img src={player.photoURL} height=\"25\" alt={player.displayName} /> :\n    <Avatar name={player.displayName} color={Avatar.getRandomColor('sitebase', ['green'])} size=\"25\" textSizeRatio={2} />\n);\n\n// const UserList = (props) => {\nclass UserList extends Component {\n  componentDidMount() {\n    this.updatePlayerStatusIfNeccessary();\n    // console.log('in componentDidMount');\n    // const { auth: user, gathering, } = this.props;\n    // const inGame = false;\n    // const player = this.props.players.find(player1 => player1.uid === user.uid);\n    // // console.log('player', player);\n    // if (player && player.inGame !== inGame) {\n    //   const player1 = { ...player, inGame };\n    //   // console.log('going to updatePlayerStatus, player1', player1);\n    //   this.props.changePlayerStatus(player1, gathering);\n    // }\n  }\n\n  componentDidUpdate() {\n    this.updatePlayerStatusIfNeccessary();\n    // console.log('in componentDidUpdate');\n    // const { auth: user, gathering, } = this.props;\n    // const inGame = false;\n    // const player = this.props.players.find(player1 => player1.uid === user.uid);\n    // // console.log('player', player);\n    // if (player && player.inGame !== inGame) {\n    //   const player1 = { ...player, inGame };\n    //   // console.log('going to updatePlayerStatus, player1', player1);\n    //   this.props.changePlayerStatus(player1, gathering);\n    // }\n  }\n\n  updatePlayerStatusIfNeccessary() {\n    const { auth: user, gathering, } = this.props;\n    const inGame = false;\n    const player = this.props.players.find(player1 => player1.uid === user.uid);\n    // console.log('player', player);\n    if (player && player.inGame !== inGame) {\n      const player1 = { ...player, inGame };\n      // console.log('going to updatePlayerStatus, player1', player1);\n      this.props.changePlayerStatus(player1, gathering);\n    }\n  }\n\n\n  render() {\n    // const { selectPlayer } = props;\n    const { props } = this;\n    const { selectPlayer, auth } = props;\n    const players = props.players && Array.isArray(props.players) ? props.players : [];\n\n    // console.log('players', players, 'props', props);\n\n    return (\n      <Card className=\"border-info app\" id=\"available-players\" style={{ display: \"block\" }} >\n        {/* <CardHeader className=\"text-white bg-info\">\n          Other Available Users\n        </CardHeader> */}\n        <CardBody className=\"\">\n          { players.length < 1 ? 'Loading players...' : players.map(player => (\n            <Button\n              key={player.uid}\n              onClick={() => selectPlayer(player.uid)}\n              color=\"primary\"\n              className=\"mr-1 mb-1\"\n              outline\n              disabled={player.uid === auth.uid || player.inGame}\n              title={`${player.displayName}${player.inGame ? ' (currently in a game)' : player.uid === auth.uid ? ' (You cannot play against yourself)' : ''}`}\n            >{ player.uid === auth.uid ? `You (${player.displayName})` : player.displayName} <span> <PlayerAvatar player={player} /></span>\n            </Button>\n          ))}\n        </CardBody>\n        {/* <CardFooter className=\"card-footer\">Select a user to play!</CardFooter> */}\n      </Card>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth, gathering }) {\n  const onlinePlayers = gathering != null ? gathering.onlinePlayers || [] : [];\n  return { auth, gathering, players: onlinePlayers, };\n}\n\n// export default connect(mapStateToProps, { joinGathering })(UserList);\nexport default connect(mapStateToProps, { changePlayerStatus })(UserList);\n","// import firebase, { authRef, provider, } from '../firebase';\n// import firebase, { provider, } from '../firebase';\nimport firebase, { googleProvider, githubProvider } from '../firebase';\n// import { authRef, provider, } from '../firebase';\nimport { leaveGathering } from './gatheringActions';\n// import { FETCH_USER } from './types';\nimport { userActions, modalActions } from './types';\n// const auuthRef = firebase.auth();\n\nexport const fetchUser = () => dispatch => firebase.auth().onAuthStateChanged(user => {\n  // This function is not an action or action creator, but just creates a firebase listener, which when fired dispatches actions.\n  // I would like to decouple the creation of the listener from the action creators.\n  console.log('onAuthStateChanged triggered from fetchUser');\n  if (user && user.displayName) {\n    dispatch({\n      type: userActions.FETCH_USER,\n      payload: user\n    });\n    setTimeout(() => dispatch({\n      type: modalActions.CLOSE_AUTHENTICATION_MODAL,\n      payload: {\n        // loginError: false,\n        // registrationError: false,\n        loginError: undefined,\n        registrationError: undefined,\n      }\n    }), 1600);\n    // dispatch({\n    //   type: modalActions.CLOSE_AUTHENTICATION_MODAL,\n    //   payload: {\n    //     loginError: undefined,\n    //   }\n    // });\n  }\n  else {\n    dispatch({\n      type: userActions.FETCH_USER,\n      payload: null\n    });\n  }\n});\n\nconst signInMain = (providerName) => dispatch => firebase.auth()\n  .signInWithPopup(providerName === 'github' ? githubProvider : providerName === 'google' ? googleProvider : googleProvider)\n  .then(result => {\n  // .then(() => {\n    console.log('singIn result', result);\n    // no need to dispatch auth signer, because then is done using the onAuthStateChanged event listener\n    dispatch({ type: userActions.SIGNIN_SUCCESSFUL });\n  })\n  .catch(error => {\n    dispatch({ type: userActions.SIGNIN_ERROR, payload: error });\n    console.log('signIn action error', error);\n  });\n\n\nexport const signIn = () => dispatch => dispatch(signInMain('google'));\nexport const signInWithGithub = () => dispatch => dispatch(signInMain('github'));\n\n\nexport const handleSignOut = () => dispatch => {\n  const authRef = firebase.auth();\n  if (authRef.currentUser) {\n    authRef.signOut()\n      .then(() => {\n        dispatch({ type: userActions.SIGNOUT_SUCCESSFUL });\n        return Promise.resolve(true);\n      })\n      .catch(error => {\n        dispatch({ type: userActions.SIGNOUT_ERROR, payload: error });\n      });\n    return Promise.resolve(true);\n    // return true;\n  }\n  else {\n    // return false;\n    dispatch({ type: userActions.SIGNOUT_ERROR, payload: 'error on signout' });\n    return Promise.resolve(false);\n  }\n};\n\n\n// export const signOut = ({ auth: user, gathering }) => dispatch => {\nexport const signOut = ({ gathering }) => dispatch => {\n  dispatch({ type: userActions.SIGNOUT_REQUEST });\n  if (gathering && Object.keys(gathering).length > 0 && typeof gathering.leave === 'function') {\n    dispatch(leaveGathering(gathering));\n    // console.log('executed leaveGathering action, now signing out');\n  }\n  else {\n    console.log('not leaving gathering, because it does not appear to be defined');\n  }\n  // return Promise.resolve(handleSignOut());\n  return dispatch(handleSignOut());\n};\n\nexport const registerUserAction = ({ username, email, password }) => dispatch => {\n  // console.log('in registerUser Action');\n  const authRef = firebase.auth();\n  // console.log('username', username, 'email', email, 'password', password);\n  dispatch({\n    type: userActions.EMAIL_PASSWORD_REGISTRATION_ATTEMPT,\n    // payload: { username, email, password },\n  });\n  return authRef.createUserWithEmailAndPassword(email, password)\n    .then(() => {\n    // .then((data) => {\n      // console.log('registerUserAction data', data);\n      dispatch({\n        type: userActions.EMAIL_PASSWORD_REGISTRATION_SUCCESS,\n        // payload: { username, email, password },\n      });\n      // also update user profile in firebase with username\n      const authUser = authRef.currentUser;\n      authUser.updateProfile({\n        uid: authUser.uid,\n        displayName: username,\n      }).then(() => {\n        // console.log('updateProfile result', result)\n        setTimeout(() => dispatch({\n          type: modalActions.CLOSE_AUTHENTICATION_MODAL,\n          payload: {\n            registrationError: undefined,\n            loginError: undefined,\n          }\n        }), 2000);\n        dispatch({\n          type: userActions.FETCH_USER,\n          payload: firebase.auth().currentUser\n        });\n        dispatch({\n          type: modalActions.MODAL_MESSAGE,\n          payload: {\n            registrationError: false,\n            loginError: false,\n            message: \"Registration was successful!\",\n          }\n        });\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: modalActions.MODAL_MESSAGE,\n        payload: {\n          registrationError: true,\n          message: err.message,\n        }\n      });\n    });\n};\n\nexport const loginUserWithEmailPassword = ({ email, password }) => dispatch => {\n  // console.log('in loginUserWithEmailPassword');\n  const authRef = firebase.auth();\n  dispatch({\n    type: userActions.EMAIL_PASSWORD_LOGIN_ATTEMPT,\n  });\n  return authRef.signInWithEmailAndPassword(email, password)\n    // .then((data) => {\n    .then(() => {\n      // console.log('login data', data);\n      dispatch({\n        type: userActions.EMAIL_PASSWORD_LOGIN_SUCCESS,\n      });\n      dispatch({\n        type: modalActions.MODAL_MESSAGE,\n        payload: {\n          // loginError: undefined,\n          // registrationError: undefined,\n          loginError: false,\n          registrationError: false,\n          message: 'Login was successful!',\n        }\n      });\n      setTimeout(() => dispatch({\n        type: modalActions.CLOSE_AUTHENTICATION_MODAL,\n        payload: {\n          loginError: undefined,\n          registrationError: undefined,\n        }\n      }), 1600);\n    })\n    .catch((err) => {\n      // console.log('error on loginUserWithEmailPassword', err);\n      // console.log(err);\n      // dispatch({\n      //   type: userActions.EMAIL_PASSWORD_LOGIN_FAIL,\n      //   // payload: err,\n      //   payload: { message: err.message },\n      // });\n      dispatch({\n        type: modalActions.MODAL_MESSAGE,\n        payload: {\n          loginError: true,\n          message: err.message,\n        }\n      });\n      // console.log('dispatched userActions.EMAIL_PASSWORD_LOGIN_FAIL in loginUserWithEmailPassword', userActions.EMAIL_PASSWORD_LOGIN_FAIL);\n    });\n\n  // return dispatch({\n  //   type: 'LOGIN_USER_FAKE',\n  //   payload: { email, password },\n  // });\n};\n","import {\n  modalActions,\n} from './types';\n\n\nexport const openAuthenticationModal = () => dispatch => {\n  // console.log('running openAuthenticationModal action');\n  dispatch({\n    type: modalActions.OPEN_AUTHENTICATION_MODAL,\n  });\n};\n\nexport const closeAuthenticationModal = () => dispatch => {\n  return dispatch({\n    type: modalActions.CLOSE_AUTHENTICATION_MODAL,\n  });\n};\n\nexport const toggleAuthenticationModal = () => dispatch => {\n  // console.log('in toggleAuthenticationModal action');\n  return dispatch({\n    type: modalActions.TOGGLE_AUTHENTICATION_MODAL,\n  });\n};\n\nexport const modalMessage = (obj) => dispatch => {\n  // sampleObj = {\n  //   // old values\n  //   loginError: false,\n  //   registrationError: false,\n  //   message: 'Login was successful!',\n  //   // more values\n  //   loginUsernameError: false,\n  //   loginUsernameMessage: 'Must be atleast 1 character',\n  //   loginPasswordError: false,\n  //   loginPasswordMessage: 'Password length must be atleast 6 characters',\n  //\n  //   regDisplayNameError: true,\n  //   regDisplayNameMessage: 'Must be atleast 1 character',\n  //   regUsernameError: false,\n  //   regUsernameMessage: 'Must be atleast 1 character',\n  //   regPasswordError: false,\n  //   regPasswordMessage: 'Password length must be atleast 6 characters',\n  //   regPasswordMatchError: false,\n  //   regPasswordMatchMessage: 'Passwords must match',\n  // };\n  return dispatch({\n    type: modalActions.MODAL_MESSAGE,\n    payload: obj\n  });\n};\n","import React from 'react';\nimport {\n  Modal,\n  // ModalHeader,\n  ModalBody,\n  // ModalFooter,\n  Button,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n  ButtonGroup,\n\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { signIn, signInWithGithub, loginUserWithEmailPassword, registerUserAction } from '../actions/user';\nimport { toggleAuthenticationModal, modalMessage } from '../actions/modalActions';\nimport { LoginForm, RegistrationForm } from '../components';\n\nclass AuthenticationModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n    };\n  }\n\n  toggleTab(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    // console.log('rendingering AuthenticationModal, props:', this.props);\n    const { signIn: googleSignIn, signInWithGithub: githubSignIn, authenticationModalOpen: isOpen, toggleAuthenticationModal: toggle } = this.props;\n\n    return (\n      <Modal isOpen={isOpen} toggle={toggle} size=\"lg\" className={this.props.className}>\n        <ModalBody>\n          <Row className=\"row\">\n            {/* <div className=\"col-lg-8 col-md-12 add-right-border\"> */}\n            <Col lg={8} md={12} className=\"add-right-border\">\n              {/* <!-- Nav tabs --> */}\n              {/* <!-- modified from https://bootsnipp.com/snippets/VElzQ --> */}\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={this.state.activeTab === '1' ? 'active' : ''}\n                    onClick={() => { this.toggleTab('1'); }}\n                  >\n                    Login\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={this.state.activeTab === '2' ? 'active' : ''}\n                    onClick={() => { this.toggleTab('2'); }}\n                  >\n                    Registration\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <TabContent activeTab={this.state.activeTab} className=\"mt-2\" id=\"nav-tab-content\">\n                <TabPane tabId=\"1\">\n                  <LoginForm closeButtonAction={toggle} {...this.props} />\n                </TabPane>\n                <TabPane tabId=\"2\">\n                  <RegistrationForm closeButtonAction={toggle} {...this.props} />\n                </TabPane>\n              </TabContent>\n              {/* <!-- Sign in with Google of Github--> */}\n              <div id=\"OR\" className=\"\">OR</div>\n            </Col>\n            {/* <div className=\"hidden-lg-down col-sm-12 col-md-12 col-lg-4\"> */}\n            <Col sm={12} md={12} lg={4} className=\"hidden-lg-down\">\n              <Row className=\"text-center sign-with\">\n                <Col md={12}>\n                  <h5>Sign in with</h5>\n                </Col>\n                <Col md={12}>\n                  {/* <div className=\"btn-group btn-group-justified\"> */}\n                  <ButtonGroup>\n                    <Button id=\"github-signin\" onClick={githubSignIn}>Github</Button>\n                    <Button color=\"danger\" id=\"google-signin\" onClick={googleSignIn}>Google</Button>\n                  </ButtonGroup>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\n\nfunction mapStateToProps({ modals }) {\n  const { authenticationModalOpen } = modals;\n  return { authenticationModalOpen, modals };\n}\n\n\nAuthenticationModal.defaultProps = {\n};\n\nAuthenticationModal.propTypes = {\n  // auth: PropTypes.shape({\n  //   displayName: PropTypes.string,\n  //   uid: PropTypes.string,\n  //   photoURL: PropTypes.string,\n  // }),\n  signIn: PropTypes.func.isRequired,\n  // signOut: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, { signIn, signInWithGithub, toggleAuthenticationModal, loginUserWithEmailPassword, registerUserAction, modalMessage })(AuthenticationModal);\n","import React from 'react';\nimport {\n  // ModalHeader,\n  // ModalFooter,\n  Button,\n  // Container,\n  Row,\n  Col,\n  Input,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport const validateEmail = email => !!email.match(\"[a-zA-Z]+.*@.*[a-zA-Z]+.*[.][a-zA-Z]+\");\n\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      // formValid: false,\n      // formInvalid: false,\n    };\n  }\n\n  handleInputChange = event => this.setState({ [event.target.name]: event.target.value });\n\n  handleRegisterClick = event => {\n    event.preventDefault();\n    // const { registerUserAction } = this.props;\n    // const { props } = this;\n    const { username, email, password, passwordConfirm } = this.state;\n    // if (username.length > 0 && validateEmail(email) && password.length >= 6 && password === passwordConfirm) {\n    //   return this.props.registerUserAction({ username, email, password });\n    // }\n    if (username.length < 1) {\n      return console.error('need valid username');\n    }\n    if (!validateEmail(email)) {\n      return console.error('need valid email');\n    }\n    if (password.length < 6) {\n      return console.error('need password of length 6 or more characters');\n    }\n    if (password !== passwordConfirm) {\n      return console.error('password and confirmation did not match');\n    }\n    console.log('data is valid. Registering user');\n    return this.props.registerUserAction({ username, email, password });\n  }\n\n  render() {\n    const { username, email, password, passwordConfirm } = this.state;\n    const { handleInputChange, handleRegisterClick } = this;\n\n    // console.log('this.props', this.props);\n    const { registrationError: modalError, message } = this.props.modals;\n    const { closeButtonAction } = this.props;\n    const valid = !modalError && typeof modalError !== 'undefined' ? true : undefined;\n    const invalid = !!modalError && typeof modalError !== 'undefined' ? true : undefined;\n\n    return (\n      <Form autoComplete=\"off\">\n        <FormGroup row >\n          <Label for=\"name\" sm={3} className=\"pr-0\" >Display Name</Label>\n          <Col sm={9}>\n            <Input valid={valid} invalid={invalid} type=\"text\" name=\"username\" value={username} placeholder=\"Display Name\" onChange={handleInputChange} />\n            {/* <FormFeedback>Please choose a display name.</FormFeedback> */}\n          </Col>\n        </FormGroup>\n        <FormGroup row >\n          <Label for=\"email\" sm={3} >Email</Label>\n          <Col sm={9}>\n            <Input valid={valid} invalid={invalid} type=\"email\" name=\"email\" value={email} placeholder=\"Email\" onChange={handleInputChange} />\n            {/* <FormFeedback>Please use a valid-looking email.</FormFeedback> */}\n          </Col>\n        </FormGroup>\n        <FormGroup row >\n          <Label for=\"password\" sm={3} >Password</Label>\n          <Col sm={9}>\n            <Input valid={valid} invalid={invalid} type=\"password\" name=\"password\" value={password} placeholder=\"Password (6-character minimum)\" onChange={handleInputChange} autoComplete=\"off\" />\n            {/* <FormFeedback>Please choose a password of at least 6 characters.</FormFeedback> */}\n          </Col>\n        </FormGroup>\n        <FormGroup row >\n          <Label for=\"passwordConfirm\" sm={3} >Confirm</Label>\n          <Col sm={9}>\n            <Input valid={valid} invalid={invalid} type=\"password\" name=\"passwordConfirm\" value={passwordConfirm} placeholder=\"Confirm Password\" onChange={handleInputChange} />\n            {/* <FormFeedback>Password and Password Confirmation must match.</FormFeedback> */}\n            <FormFeedback valid={valid} invalid={typeof invalid !== 'undefined' ? 'false' : undefined} >{message}</FormFeedback>\n          </Col>\n        </FormGroup>\n        <Row>\n          <Col sm={{ size: 9, offset: 3 }} >\n            <Button color=\"primary\" onClick={handleRegisterClick}>Register</Button>\n            <Button color=\"danger\" onClick={closeButtonAction} className=\"ml-2\" data-dismiss=\"modal\">Cancel</Button>\n          </Col>\n        </Row> \n      </Form>\n    );\n  }\n}\n\nRegistrationForm.propTypes = {\n  modals: PropTypes.shape({\n    registrationError: PropTypes.bool,\n    message: PropTypes.string,\n    // authenticationModalOpen: PropTypes.bool.isRequired,\n  }).isRequired,\n  closeButtonAction: PropTypes.func.isRequired,\n  registerUserAction: PropTypes.func.isRequired,\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport {\n  Button,\n  Row,\n  Col,\n  Input,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport { validateEmail } from './RegistrationForm';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  handleInputChange = event => this.setState({ [event.target.name]: event.target.value });\n\n  handleLoginClick = event => {\n    event.preventDefault();\n    console.log('in handleLoginClick');\n    // const { props } = this;\n    const { email, password, } = this.state;\n\n    let errorObj = {\n      loginError: undefined,\n      message: '',\n      // loginUsernameError: false,\n      // loginUsernameMessage: 'Must be atleast 1 character',\n      // loginPasswordError: true,\n      // loginPasswordMessage: 'Password length must be atleast 6 characters',\n    };\n    if (password.length < 6) {\n      console.error('password needs to be at least 6 characters');\n      errorObj = {\n        ...errorObj,\n        loginError: true,\n        loginPasswordError: true,\n        loginPasswordMessage: 'Password length must be atleast 6 characters',\n      };\n    }\n    else {\n      errorObj = {\n        ...errorObj,\n        loginPasswordError: undefined,\n        loginPasswordMessage: '',\n      };\n    }\n\n    if (!validateEmail(email)) {\n      console.error('email does not appear valid');\n      errorObj = {\n        ...errorObj,\n        loginError: true,\n        loginUsernameError: true,\n        loginUsernameMessage: 'Must be a valid email address.',\n      };\n    }\n    else {\n      errorObj = {\n        ...errorObj,\n        loginUsernameError: undefined,\n        loginUsernameMessage: '',\n      };\n    }\n\n    if (errorObj.loginError) {\n      this.props.modalMessage(errorObj);\n    }\n    else {\n      console.log('trying to login');\n      this.props.modalMessage(errorObj);\n      this.props.loginUserWithEmailPassword({ email, password });\n    }\n  }\n\n  render() {\n    const { email, password } = this.state;\n    const { handleInputChange, handleLoginClick } = this;\n    console.log('this.props', this.props);\n    const { loginError: modalError, message, loginUsernameError, loginUsernameMessage, loginPasswordError, loginPasswordMessage, } = this.props.modals;\n    const { closeButtonAction } = this.props;\n    const valid = !modalError && typeof modalError !== 'undefined' ? true : undefined;\n    // const passwordIsValid = !loginPasswordError;\n    const invalid = !!modalError && typeof modalError !== 'undefined' ? true : undefined;\n\n    // const validEmail = loginUsernameError === false || valid === true ? undefined : true;\n    // const validEmail = typeof loginUsernameError !== 'undefined' && loginUsernameError === false ? true : undefined;\n    const validEmail = typeof loginUsernameError !== 'undefined' && loginUsernameError === false ? true : valid;\n    // const invalidEmail = loginUsernameError === false || invalid === false ? true : undefined;\n    // const invalidEmail = typeof loginUsernameError !== 'undefined' && loginUsernameError === true ? true : undefined;\n    const invalidEmail = typeof loginUsernameError !== 'undefined' && loginUsernameError === true ? true : invalid;\n\n    const validPass = typeof loginPasswordError !== 'undefined' && loginPasswordError === false ? true : valid;\n    const invalidPass = typeof loginPasswordError !== 'undefined' && loginPasswordError === true ? true : invalid;\n    console.log('validEmail: ', validEmail, 'valid: ', valid, 'loginUsernameError: ', loginUsernameError);\n\n    return (\n      <Form >\n        <FormGroup row >\n          <Label for=\"email\" sm={3} >Email</Label>\n          <Col sm={9}>\n            <Input valid={validEmail} invalid={invalidEmail} type=\"email\" name=\"email\" value={email} placeholder=\"Email\" onChange={handleInputChange} />\n            {/* <FormFeedback valid={validEmail} invalid={typeof invalidEmail !== 'undefined' ? 'false' : undefined} >{loginUsernameMessage}</FormFeedback> */}\n            <FormFeedback>{loginUsernameMessage}</FormFeedback>\n          </Col>\n        </FormGroup>\n        <FormGroup row >\n          <Label for=\"password\" sm={3} >Password</Label>\n          <Col sm={9}>\n            {/* <Input valid={valid} invalid={invalid} type=\"password\" name=\"password\" value={password} placeholder=\"password\" onChange={handleInputChange} /> */}\n            <Input valid={validPass} invalid={invalidPass} type=\"password\" name=\"password\" value={password} placeholder=\"password\" onChange={handleInputChange} />\n            {/* <FormFeedback valid={valid} invalid={typeof invalid !== 'undefined' ? 'false' : undefined} >{message}</FormFeedback> */}\n            <FormFeedback valid={!loginPasswordError} invalid={typeof loginPassswordMessage !== 'undefined' ? 'false' : undefined} >{loginPasswordMessage}</FormFeedback>\n            <FormFeedback valid={valid} invalid={typeof invalid !== 'undefined' ? 'false' : undefined} >{message}</FormFeedback>\n            {/* <FormFeedback>{message || loginPasswordMessage}</FormFeedback> */}\n          </Col>\n          {/* <FormFeedback valid={modalError}>Logging in. Please wait...</FormFeedback> */}\n        </FormGroup>\n        <Row>\n          <Col sm={{ size: 9, offset: 3 }} >\n            <Button color=\"primary\" onClick={handleLoginClick}>Submit</Button>\n            <Button color=\"danger\" onClick={closeButtonAction} className=\"ml-2\" data-dismiss=\"modal\">Cancel</Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  modals: PropTypes.shape({\n    loginError: PropTypes.bool,\n    message: PropTypes.string,\n    // authenticationModalOpen: PropTypes.bool.isRequired,\n  }).isRequired,\n  closeButtonAction: PropTypes.func.isRequired,\n  loginUserWithEmailPassword: PropTypes.func.isRequired,\n  modalMessage: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Card, Button } from 'reactstrap';\n\nimport { toggleAuthenticationModal } from '../actions/modalActions';\nimport \"./Landing.css\";\n\nimport landingImage from '../img/landing-rps.jpg';\n\nexport class Landing extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.auth) {\n      this.context.router.history.push(\"/app\");\n    }\n  }\n\n  toggleModal = (e) => {\n    e.preventDefault();\n    this.props.toggleAuthenticationModal();\n  }\n\n  render() {\n    return (\n      <div>\n        <Row className=\"social-signin-container\">\n          <Col>\n            {/* <img alt=\"Sign in\" id=\"sign-in\" src=\"/img/user.png\" /> */}\n            <img alt=\"Rock Paper Scissors\" id=\"sign-in\" width=\"100%\" src={landingImage} />\n            <br />\n            <br />\n            <br />\n            <br />\n            {/* <h4 id=\"sign-in-header\">Sign In to start</h4> */}\n            <Button href=\"/#\" className=\"social-signin\" onClick={this.toggleModal}>\n              Sign in to start\n            </Button>\n            {/* <a href=\"/#\" className=\"social-signin\" onClick={this.toggleModal}> */}\n            {/*   Sign in to start                                                 */}\n            {/* </a>                                                               */}\n          </Col>\n        </Row>\n        <Row className=\"mt-4 mb-4 text-left\">\n          <Col >\n            <Card body outline color=\"danger\" className=\"bs-callout bs-callout-danger\">\n              <p>For trying out the game with multiple players, you can use separate logins in separate browsing sessions.</p>\n              <p>You can create your own logins or use the following sample logins (each with password &apos;<samp>password</samp>&apos;):</p>\n              <ul>\n                <li><samp>harry@hogwarts.co.uk</samp></li>\n                <li><samp>ron@hogwarts.co.uk</samp></li>\n                <li><samp>hermione@hogwarts.co.uk</samp></li>\n              </ul>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return { auth };\n}\n\nexport default connect(mapStateToProps, { toggleAuthenticationModal })(Landing);\n","// import firebase from '../firebase';\nimport firebase, { refs } from '../firebase';\nimport { chatActions } from './types';\n\nexport const GamesRefChild = (childRef) => firebase.database().ref(`${refs.games}/${childRef}`);\n\n// sendMessageThroughFirebase = ({ message, gameUID, playerUID, }) => (dispatch) => {\nconst sendMessageThroughFirebase = ({ message, gameUID, playerUID, }) => {\n  const chatRef = GamesRefChild(`${gameUID}/chat/messages`);\n  return chatRef.push({\n    message,\n    playerUID,\n    timestamp: firebase.database.ServerValue && firebase.database.ServerValue.TIMESTAMP,\n  });\n  // chatRef.push({ message, playerUID }).then(() => {\n  // });\n};\n\nconst sendStatusChange = ({ userIsTyping, userUID, gameUID }) => \n  GamesRefChild(`${gameUID}/chat/statuses/${userUID}`).update({ isTyping: userIsTyping });\n\n// called by firebase listener\nexport const updateMessages = messages => (dispatch) => {\n  const messagesToSend = messages != null && messages !== undefined ? messages : {};\n  dispatch({\n    type: chatActions.UPDATE_MESSAGES,\n    payload: {\n      messages: messagesToSend,\n    }\n  });\n};\n\n// called by UI, calls firebase update\nexport const sendMessage = ({ message }) => (dispatch) => {\n  // const payload = {};\n  let payload = {};\n  if (message != null && message !== undefined) {\n    payload.message = message;\n  }\n  else {\n    payload = null;\n  }\n  dispatch({\n    type: chatActions.SEND_MESSAGE,\n    payload,\n    // payload: {\n    //   message,\n    // },\n  });\n};\n\n\n// called by UI, calls firebase update\nexport const updatePlayerStatus = ({ userIsTyping }) => (dispatch) => {\n  dispatch({\n    type: chatActions.USER_IS_TYPING,\n    payload: userIsTyping,\n  });\n};\n\n// called by firebase listener\nexport const updateOpponentStatus = ({ opponentIsTyping }) => (dispatch) => {\n  dispatch({\n    type: chatActions.OPPONENT_IS_TYPING,\n    payload: opponentIsTyping,\n  });\n};\n\n\nexport const sendMessageFull = ({ message, gameUID, playerUID }) => (dispatch) => {\n  // console.log('in sendMessageFull');\n  dispatch(sendMessage({ message }));\n  sendMessageThroughFirebase({ message, gameUID, playerUID }).then(() => {\n    dispatch(sendMessage({}));\n  });\n};\n\nexport const updateStatus = ({ userIsTyping, userUID, gameUID }) => dispatch => {\n  console.log('userIsTyping', userIsTyping, 'userUID', userUID, 'gameUID', gameUID);\n  sendStatusChange({ userIsTyping, userUID, gameUID }).then(() => {\n    dispatch(updatePlayerStatus({ userIsTyping }));\n  });\n};\n\nexport const createChatUpdateListeners = ({ gameUID, opponentUID, }) => dispatch => {\n  // console.log('creating message update listener');\n  GamesRefChild(`${gameUID}/chat/messages`).on('value', (snapshot) => {\n  // chatRef.on('value', (snapshot) => {\n    // console.log('received chat messages update, snapshot:', snapshot.val());\n    dispatch(updateMessages(snapshot.val()));\n  });\n  console.log('opponentUID listening for', opponentUID);\n  GamesRefChild(`${gameUID}/chat/statuses/${opponentUID}`).on('value', (snapshot) => {\n    console.log('received opponent chat status update, snapshot:', snapshot.val());\n    const { isTyping: opponentIsTyping } = snapshot.val();\n    dispatch(updateOpponentStatus({ opponentIsTyping }));\n  });\n\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  // Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  // CardTitle,\n  // CardText,\n  CardFooter,\n  CardHeader,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Form,\n  FormText,\n  // InputGroupText,\n  // FormGroup,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\n\nimport './Chat.css';\n\nimport { sendMessageFull, createChatUpdateListeners, updateStatus } from '../actions/chatActions';\n// import { joinGathering } from '../actions/gatheringActions';\n// import {\n//   changePlayerStatus,\n// } from '../actions/gatheringActions';\n\n\nconst PlayerAvatar = ({ player }) => (\n  player.photoURL && player.photoURL.length > 0 ?\n    // <img className=\"avatar-image\" src={player.photoURL} height=\"37\" alt={player.displayName} /> :\n    <Avatar src={player.photoURL} size=\"37\" textSizeRatio={2} round /> :\n    <Avatar name={player.displayName} color={Avatar.getRandomColor('sitebase', ['green'])} size=\"37\" textSizeRatio={2} round />\n);\n\nconst getTimeFromStamp = (timestamp) => {\n  // const d = new Date(timestamp);\n  const d = moment(timestamp);\n  // timeStampCon = d.getDate() + '/' + (d.getMonth()) + '/' + d.getFullYear() + \" \" + d.getHours() + ':' + d.getMinutes();\n  // const timeStampCon = d.getHours() + ':' + d.getMinutes();\n  const timeStampCon = d.format(\"h:mm A\");\n  return timeStampCon;\n};\n\n\nconst getDateFromStamp = (timestamp) => {\n  // const d = new Date(timestamp);\n  const d = moment(timestamp);\n  // timeStampCon = d.getDate() + '/' + (d.getMonth()) + '/' + d.getFullYear() + \" \" + d.getHours() + ':' + d.getMinutes();\n  // console.log('d', d);\n  // const dateStampCon = (d.getMonth()) + '/' + d.getDate();\n  const dateStampCon = d.format(\"MMMM DD\");\n  // d.getFullYear() + \" \" + d.getHours() + ':' + d.getMinutes();\n  // timeStampCon = d.getHours() + ':' + d.getMinutes();\n  return dateStampCon;\n};\n\nconst Message = ({ direction, text, timestamp, imgSrc, name }) => {\n  const time = getTimeFromStamp(timestamp);\n  const date = getDateFromStamp(timestamp);\n\n  return (\n    <Row className={direction === 'incoming' ? 'incoming_msg' : 'outgoing_msg'}>\n      <Col sm={{ size: 1, order: direction === 'incoming' ? 1 : 2, offset: 0 }} >\n        <PlayerAvatar player={{ photoURL: imgSrc, displayName: name }} />\n      </Col>\n      <Col sm={{ size: 6, order: direction === 'incoming' ? 2 : 1, offset: direction === 'incoming' ? 0 : 5 }} className={direction === 'incoming' ? 'received_msg' : 'sent_msg'}>\n        {/* <Card className={`border-0 p ${direction === 'incoming' ? 'received_withd_msg1' : 'sent_withd_msg1'}`} color={direction === 'outgoing' ? 'primary' : 'light'}> */}\n        <Card className={`border-0 p ${direction === 'incoming' ? 'received_withd_msg1' : 'sent_withd_msg1'}`} >\n          <CardBody className={`message bg-${direction === 'outgoing' ? 'primary' : 'light'}`}>{text}</CardBody>\n          <CardFooter className=\"time_date\">{time} | {date}</CardFooter>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSend = this.handleSend.bind(this);\n    this.state = {\n      messageText: \"\",\n      // userIsTyping: false,\n      // timeoutRef: null,\n    };\n  }\n  componentDidMount() {\n    // const { opponentUid: opponentUID, gameKey: gameUID } = this.props.game;\n    const { gameKey: gameUID } = this.props.game;\n    const { player1: player1UID, player2: player2UID } = this.props.game.gameData;\n    const { uid: myUID } = this.props.auth;\n    const opponentUID = myUID === player1UID ? player2UID : player1UID;\n    this.props.createChatUpdateListeners({ opponentUID, gameUID });\n  }\n\n  componentDidUpdate() {\n  }\n\n\n  handleSend(e) {\n    // if (e && e.preventDefault) {\n    e.preventDefault();\n    // }\n    const { messageText } = this.state;\n    if (messageText.length > 0) {\n      // this.props.sendMessage(messageText);\n      const { gameKey: gameUID } = this.props.game;\n      const { uid: playerUID } = this.props.auth;\n      this.props.sendMessage({ message: messageText, gameUID, playerUID });\n      this.setState({ messageText: '' });\n    }\n  }\n\n  stopTypingTimeout = null;\n\n  resetStopTypingTimeout = () => {\n    const { stopTypingTimeout } = this;\n    if (stopTypingTimeout) {\n      clearTimeout(stopTypingTimeout);\n    }\n    this.stopTypingTimeout = setTimeout(() => {\n      // this.isTyping = false;\n      const { gameKey: gameUID } = this.props.game;\n      const { uid: userUID } = this.props.auth;\n      this.props.updateStatus({ userIsTyping: false, gameUID, userUID });\n      this.stopTypingTimeout = undefined;\n    }, 3000);\n  };\n\n  handleInputChange = event => {\n    // const { timeoutRef } = this.state;\n    // clearTimeout(timeoutRef);\n    this.resetStopTypingTimeout();\n    this.setState({ [event.target.name]: event.target.value });\n    const { gameKey: gameUID } = this.props.game;\n    const { uid: userUID } = this.props.auth;\n    this.props.updateStatus({ userIsTyping: true, gameUID, userUID });\n    // this.props.updateStatus({ isTyping: true });\n  }\n\n  render() {\n\n    // const { selectPlayer } = props;\n    // const { messages } = this.props;\n    const { messages: msgs, opponentStatus } = this.props.chat;\n    const { isTyping: opponentIsTyping } = opponentStatus;\n    console.log('opponentIsTyping', opponentIsTyping, 'opponentStatus', opponentStatus);\n    // const { opponentUid: opponentUID, gameKey: gameUID } = this.props.game;\n    // const { opponentUid: opponentUID, } = this.props.game;\n    const { uid: myUID } = this.props.auth;\n    // const { player1Name, player1: player1UID, player2Name, player2: player2UID } = this.props.game.gameData;\n    const { player1Name, player1: player1UID, player2Name, } = this.props.game.gameData;\n    // console.log('player1UID', player1UID, 'player2UID', player2UID);\n    // const myName = player1UID === opponentUID ? player2Name : player1Name;\n    const myName = player1UID === myUID ? player1Name : player2Name;\n    // const opponentName = player1UID === opponentUID ? player1Name : player2Name;\n    const opponentName = player1UID === myUID ? player2Name : player1Name;\n    // console.log('myName', myName, 'opponentName', opponentName);\n    const messages = Object.keys(msgs).map(key => {\n      const m = msgs[key];\n      return {\n        direction: m.playerUID === myUID ? 'outgoing' : 'incoming',\n        timestamp: m.timestamp,\n        text: m.message,\n        // imgSrc:\n        // name: m.playerUID === opponentUID ? opponentName : myName,\n        name: m.playerUID === myUID ? myName : opponentName,\n        id: key,\n      };\n    });\n    messages.sort((a, b) => b.timestamp - a.timestamp);\n    // console.log('messages:', messages, this.props.messages);\n    const { messageText } = this.state;\n    // const { props } = this;\n    // const { selectPlayer, auth } = props;\n    // const players = props.players && Array.isArray(props.players) ? props.players : [];\n\n    // console.log('players', players, 'props', props);\n\n    return (\n      <Card outline color=\"info\" className=\"chat border-info app\" id=\"available-players\">\n        <CardHeader className=\"text-white bg-info\">Chat</CardHeader>\n        <CardBody>\n          <Row>\n            <div className=\"mesgs\">\n              <Form onSubmit={this.handleSend}>\n                <FormText className=\"text-left\" style={{ marginBottom: '10px' }}>{opponentIsTyping ? `${opponentName} is typing...` : 'You can type a message at anytime...'}</FormText>\n                <InputGroup>\n                  <Input type=\"text\" onChange={this.handleInputChange} value={messageText} name=\"messageText\" id=\"message\" placeholder=\"Type a message...\" />\n                  <InputGroupAddon addonType=\"append\">\n                    {/* <Button className=\"msg_send_btn1\" type=\"button\"><FontAwesomeIcon icon={faPaperPlane} aria-hidden=\"true\" onSubmit={this.handleSend} onClick={this.handleSend} /></Button> */}\n                    <Button className=\"msg_send_btn1\" type=\"submit\"><FontAwesomeIcon icon={faPaperPlane} aria-hidden=\"true\" onSubmit={this.handleSend} /></Button>\n                    {/* <Button color=\"secondary\">To the Right!</Button> */}\n                  </InputGroupAddon>\n                </InputGroup>\n              </Form>\n              {/* <div className=\"type_msg\"> */}\n              {/*   <Input type=\"text\" name=\"message\" id=\"message\" placeholder=\"Type a message...\" /> */}\n              {/*   [> <div className=\"input_msg_write\">                                                                                  <] */}\n              {/*   [>   <input type=\"text\" className=\"write_msg\" placeholder=\"Type a message\" />                                         <] */}\n              {/*   [>   <button className=\"msg_send_btn\" type=\"button\"><i className=\"fa fa-paper-plane-o\" aria-hidden=\"true\" /></button> <] */}\n              {/*     <Button className=\"msg_send_btn\" type=\"button\"><FontAwesomeIcon icon={faPaperPlane} aria-hidden=\"true\" /></Button> */}\n              {/*   [> </div> <] */}\n              {/* </div> */}\n              <div className=\"msg_history\">\n                {messages.map(message => <Message key={message.id || `${message.text}_${message.timestamp}`} {...message} />)}\n                {/* <div className=\"outgoing_msg\">\n                  <div className=\"sent_msg\">\n                    <p>Test which is a new approach to have all solutions</p>\n                    <span className=\"time_date\"> 11:01 AM    |    June 9</span>\n                  </div>\n                </div>\n                <div className=\"incoming_msg\">\n                  <div className=\"incoming_msg_img\"> <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\n                  </div>\n                  <div className=\"received_msg\">\n                    <div className=\"received_withd_msg\">\n                      <p>Test, which is a new approach to have</p>\n                      <span className=\"time_date\"> 11:01 AM    |    Yesterday</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"outgoing_msg\">\n                  <div className=\"sent_msg\">\n                    <p>Apollo University, Delhi, India Test</p>\n                    <span className=\"time_date\"> 11:01 AM    |    Today</span>\n                  </div>\n                </div>\n                <div className=\"incoming_msg\">\n                  <div className=\"incoming_msg_img\"><img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\n                  </div>\n                  <div className=\"received_msg\">\n                    <div className=\"received_withd_msg\">\n                      <p>We work directly with our designers and suppliers,\n                        and sell direct to you, which means quality, exclusive\n                        products, at a price anyone can afford.\n                      </p>\n                      <span className=\"time_date\"> 11:01 AM    |    Today</span>\n                    </div>\n                  </div>\n                </div> */}\n              </div>\n            </div>\n          </Row>\n        </CardBody>\n        {/* <CardFooter className=\"card-footer\">Select a user to play!</CardFooter> */}\n      </Card>\n    );\n  }\n}\n\n\nfunction mapStateToProps({ auth, game, chat, }) {\n  // const onlinePlayers = gathering != null ? gathering.onlinePlayers || [] : [];\n  return { auth, game, chat, };\n}\n\n// export default connect(mapStateToProps, { joinGathering })(UserList);\nexport default connect(mapStateToProps, { sendMessage: sendMessageFull, createChatUpdateListeners, updateStatus })(Chat);\n","import React, { Component } from 'react';\nimport {\n  // Button,\n  // Card,\n  Row,\n  Col,\n  Container,\n  // CardBody,\n  // CardTitle,\n  // CardText,\n  // CardFooter,\n  // CardHeader,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\n\nimport { joinGathering, } from '../actions/gatheringActions';\nimport { requestGame } from '../actions/game';\nimport { PlayerList, Game, Chat } from '../components';\n\nclass Main extends Component {\n  // const { users, selectUser } = props;\n  state = {\n  };\n\n  // counter = 0;\n\n  componentDidMount() {\n    const { props: nextProps } = this;\n    // console.log('in componentWillUpdate for \\'Main\\', nextProps', nextProps);\n    if (nextProps.auth && !(nextProps.gathering && Object.keys(nextProps.gathering).length > 0)) {\n      // console.log('sending joinGathering request');\n      this.props.joinGathering(nextProps.auth);\n      // this.context.router.history.push(\"/app\");\n    }\n    else {\n      // console.log('not joining gathering');\n    }\n  }\n\n\n  selectPlayer = (uid) => {\n    const { auth: user, players } = this.props;\n    // console.log('creating action request for user, who selected to play against player uid', uid);\n    return this.props.requestGame(user, players.find(player => player.uid === uid));\n  }\n\n\n  render() {\n    // const { appStatus, appHeaderText, game } = this.props;\n    const { game } = this.props;\n    const players = this.props.players && Array.isArray(this.props.players) ? this.props.players : [];\n    const inGame = game && Object.keys(game).length > 1 && game.gameKey && game.gameKey.length > 1;\n    const havePlayers = players && players.length > 1;\n    // console.log('rendering main');\n\n    // console.log('players', players, 'this.props', this.props);\n    return (\n      // <div id=\"main\" style={{ display: \"block\" }} >\n      // <Card className=\"border-info \" id=\"main\" style={{ display: \"block\" }} >\n      // <CardHeader className=\"text-white bg-info\">{appHeaderText || ' '}</CardHeader>\n      <Container className=\"mt-3\">\n        { inGame ?\n          <Row>\n            <Col lg={4} md={12} className=\"mb-10 pb-10\">\n              <Game gameUID={game.key} className=\"mb-5\" />\n            </Col>\n            <Col lg={8} md={12}>\n              <Chat />\n            </Col>\n          </Row> :\n          !havePlayers ?\n            <div>Loading...</div> :\n            <PlayerList players=\"players\" selectPlayer={this.selectPlayer} />\n        }\n      </Container>\n\n      // { inGame ? <Chat /> : \"\" }\n      // <CardFooter className=\"card-footer\">{appStatus || ' '}</CardFooter>\n      // </Card>\n      // </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth, gathering, game }) {\n  const onlinePlayers = gathering != null ? gathering.onlinePlayers || [] : [];\n  return {\n    auth,\n    gathering,\n    players: onlinePlayers,\n    game\n  };\n}\n\nexport default connect(mapStateToProps, { joinGathering, requestGame })(Main);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { signOut } from '../actions/user'; \nimport { toggleAuthenticationModal } from '../actions/modalActions';\n\n\nimport rpsLogo from '../rpsLogo.png';\nimport { Navbar } from '../components';\n\nclass AppNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    console.log('toggling NavBar expansion');\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    const { props } = this;\n    return <Navbar {...props} logo={rpsLogo} toggle={this.toggle} isOpen={this.state.isOpen} />;\n  }\n}\n\n\nfunction mapStateToProps({ auth, gathering }) {\n  return { auth, gathering };\n}\n\n\nAppNavbar.defaultProps = {\n  auth: {},\n};\n\nAppNavbar.propTypes = {\n  auth: PropTypes.shape({\n    displayName: PropTypes.string,\n    uid: PropTypes.string,\n    photoURL: PropTypes.string,\n  }),\n  // signIn: PropTypes.func.isRequired,\n  toggleAuthenticationModal: PropTypes.func.isRequired,\n  signOut: PropTypes.func.isRequired,\n};\n\n// export default connect(mapStateToProps, { signIn, signOut, toggleAuthenticationModal })(AppNavbar);\nexport default connect(mapStateToProps, { signOut, toggleAuthenticationModal })(AppNavbar);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Main from './pages/Main';\n// import { Navbar, Landing, requireAuth, AuthenticationModal } from './components';\nimport { Landing, requireAuth, AuthenticationModal } from './components';\nimport { NavbarContainer } from './containers';\n\nimport { fetchUser } from './actions/user';\n\nexport class App extends Component {\n  componentDidMount = () => {\n    // this.props.fetchUser && typeof this.props.fetchUser === 'function' && this.props.fetchUser();\n    this.props.fetchUser();\n  }\n\n  render() {\n    // console.log('rendering App component');\n    // console.log(`Your process.env.PUBLIC_URL: '${process.env.PUBLIC_URL}'`);\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <NavbarContainer />\n          <AuthenticationModal />\n          <div className=\"container main\">\n            {/* <Route exact path=\"/\" component={SignIn} /> */}\n            <Route exact path=\"/\" component={Landing} />\n            <Route path=\"/app\" component={requireAuth(Main)} />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\n// export default App;\nexport default connect(null, { fetchUser })(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport reducers from './reducers';\nimport './css/bootstrap.min.css';\nimport './css/index.css';\nimport App from './App';\n\n// import * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(<Provider store={store}> <App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}